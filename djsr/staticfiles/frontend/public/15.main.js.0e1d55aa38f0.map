{"version":3,"sources":["webpack:///./djsr/frontend/src/components/LoadingForButtons.js","webpack:///./djsr/frontend/src/components/MaterialUiPasswordResetRequest.js","webpack:///./djsr/frontend/src/components/Notification.js","webpack:///./djsr/frontend/src/components/img/genspr-parralax-bg.png"],"names":["useStyles","makeStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","LoadingScreenB","classes","buttonProgress","styles","MaterialUiPasswordResetRequest","props","FRS","user","appState","React","useState","editView","setEditView","isOpen","message","type","notification","setNotification","useSnackbar","enqueueSnackbar","closeSnackbar","cardAnimaton","setCardAnimation","setTimeout","rest","pageHeader","backgroundImage","image","backgroundSize","backgroundPosition","container","name","email","password","passwordConfirm","Yup","shape","required","values","helpers","setSubmitting","axiosInstanceNoAuth","post","then","response","variant","setState","token","data","confirmation_token","history","push","error","errResponse","setValues","setTouched","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","console","log","cardHeader","MaterialFormikField","fullWidth","endAdornment","inputIconsColor","cardFooter","Notification"],"mappings":"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","file":"15.main.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative',\r\n    },\r\n\r\n  }));\r\n\r\nexport default function LoadingScreenB() {\r\n      const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <div className={classes.wrapper}>\r\n\r\n            <CircularProgress size={20} className={classes.buttonProgress} style={{\r\n                'color': 'purple',\r\n\r\n            }}/>\r\n\r\n        </div>\r\n    </div>\r\n\r\n      \r\n   \r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport Header from \"./material_ui_components/Header/Header.js\";\r\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\r\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\r\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\r\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\r\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\r\nimport Card from \"./material_ui_components/Card/Card.js\";\r\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\r\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\r\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\r\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\r\nimport Notification from \"./Notification\"\r\nimport image from \"./img/genspr-parralax-bg.png\";\r\nimport * as Yup from \"yup\";\r\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\r\nimport { Formik, Field } from \"formik\";\r\nimport MaterialFormikField from \"./MaterialFormikField\";\r\nimport { useSnackbar } from 'notistack';\r\nimport LoadingScreenB from \"./LoadingForButtons\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MaterialUiPasswordResetRequest = (props) => {\r\n  const FRS = \"Pole wymagane\";\r\n  const user = props.appState.user;\r\n  const [editView, setEditView] = React.useState(\"email\");\r\n  const [notification, setNotification] = React.useState({isOpen: false, message:'',type:''})\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  setTimeout(function () {\r\n    setCardAnimation(\"\");\r\n  }, 700);\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  return (\r\n    <div>\r\n\r\n      <div\r\n        className={classes.pageHeader}\r\n        style={{\r\n          backgroundImage: \"url(\" + image + \")\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"top center\",\r\n        }}\r\n      >\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card className={classes[cardAnimaton]}>\r\n              {editView==\"email\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email(\"NieprawidÅ‚owy adres e-mail\")\r\n            .required(FRS),\r\n        })}\r\n        onSubmit={(values, helpers) => {\r\n          setTimeout(() => {\r\n            helpers.setSubmitting(true);\r\n            axiosInstanceNoAuth\r\n            .post(\"/user/resetsend/\", {\r\n                email: values.email,\r\n              })\r\n              .then((response) => {\r\n                enqueueSnackbar(\"Gotowe! Teraz aktywuj konto przy pomocy linku otrzymanego na adres e-mail\", { \r\n                  variant: 'success',\r\n              });\r\n\r\n                helpers.setSubmitting(false);\r\n                this.setState({\r\n                  token: response.data.confirmation_token,\r\n                });\r\n                this.props.history.push(\r\n                  `/signupsuccess/${response.data.confirmation_token}`\r\n                );\r\n              })\r\n              .catch((error) => {\r\n                // console.log(\"login error\", error.response);\r\n                const errResponse = error.response;\r\n                                \r\n                enqueueSnackbar(\"NieprawidÅ‚owy adres e-mail\", { \r\n                  variant: 'error',\r\n              });\r\n                helpers.setSubmitting(false);\r\n                helpers.setValues(\r\n                  {\r\n                    email: \"\",\r\n                  },\r\n                  false\r\n                );\r\n                helpers.setTouched(\r\n                  {\r\n                    email: false,\r\n                   \r\n                  },\r\n                  false\r\n                );\r\n                helpers.setFieldError(\r\n                  \"general\",\r\n                  \"brak maila\"\r\n                );\r\n\r\n              });\r\n          }, 5000);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Przypomnij hasÅ‚o</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n                <Field\r\n                component={MaterialFormikField}\r\n                name={\"email\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"E-mail\"\r\n                inputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <People className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n         \r\n            \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n                disabled={isSubmitting}\r\n              >\r\n                Przypomnij hasÅ‚o\r\n              </Button>\r\n              {\r\n                            isSubmitting &&  \r\n                           <LoadingScreenB></LoadingScreenB>\r\n                      \r\n                          } \r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n\r\n                \r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </div>\r\n      <Notification\r\n      notification = {notification}\r\n      setNotification = {setNotification}\r\n      \r\n      ></Notification>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialUiPasswordResetRequest;\r\n","import React from 'react'\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function Notification(props){\r\n\r\n    const {notification, setNotification} = props;\r\n\r\n    return (\r\n        <Snackbar\r\n        open = {notification.isOpen}\r\n        autoHideDuration ={30}\r\n        >\r\n            <Alert severity={notification.type}>\r\n                {notification.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n\r\n}","export default __webpack_public_path__ + \"8ae80ee488d6ec36fd62f67865d06356.png\";"],"sourceRoot":""}