{"version":3,"sources":["webpack:///./djsr/frontend/src/components/FormikMDInput.js","webpack:///./djsr/frontend/src/components/MaterialUiLoginPage.js","webpack:///./djsr/frontend/src/components/Notification.js","webpack:///./djsr/frontend/src/components/img/genesprDark.png"],"names":["FormikMdInput","name","touched","value","errors","icon","onChange","onBlur","label","id","type","hideInput","disableAutocomplete","disabled","prepend","useState","active","setActive","join","e","console","log","useStyles","makeStyles","styles","MaterialUiLoginPage","props","user","appState","history","push","React","cardAnimaton","setCardAnimation","setTimeout","classes","isOpen","message","notification","setNotification","rest","FRS","bgStyles","paperContainer","backgroundImage","image","minHeight","examCardContainer","width","backgroundColor","cardTitle","textAlign","container","password","Yup","shape","min","max","required","values","helpers","setSubmitting","axiosInstance","post","username","then","response","defaults","headers","data","access","localStorage","setItem","refresh","checkUser","error","errResponse","status","statusText","setValues","setTouched","setFieldError","handleChange","handleBlur","handleSubmit","isSubmitting","form","cardHeader","fullWidth","children","endAdornment","inputIconsColor","cardFooter","Notification"],"mappings":"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","file":"14.main.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FormikMdInput = ({\r\n  name,\r\n  touched,\r\n  value,\r\n  errors,\r\n  icon,\r\n  onChange,\r\n  onBlur,\r\n  label,\r\n  id,\r\n  type,\r\n  hideInput,\r\n  disableAutocomplete,\r\n  disabled,\r\n  prepend,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  //todo repair prepend render\r\n\r\n  // console.log(\r\n  //   \"ninput\",\r\n  //   name,\r\n  //   active,\r\n  //   value === \"\",\r\n  //   value === null,\r\n  //   active || !(value == \"\" || value == null),\r\n  //     \"value\",\r\n  //     value\r\n  // );\r\n  return (\r\n    <div className=\"md-form form-group\">\r\n      {!!icon && (\r\n        <i\r\n          className={[\r\n            \"fa\",\r\n            icon,\r\n            \"prefix\",\r\n            touched ? (!errors ? \"text-success\" : \"red-text\") : \"\",\r\n          ].join(\" \")}\r\n        />\r\n      )}\r\n      {!!prepend && (\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">{prepend}</span>\r\n        </div>\r\n      )}\r\n      <input\r\n        name={name}\r\n        onChange={onChange}\r\n        onBlur={(e) => {\r\n          onBlur(e);\r\n          setActive(false);\r\n        }}\r\n        onFocus={() => {\r\n            console.log(\"input focus event\",name)\r\n          setActive(true);\r\n        }}\r\n        value={value}\r\n        id={id}\r\n        type={type}\r\n        autoComplete={disableAutocomplete ? \"off\" : \"on\"}\r\n        // className=\"form-control is-invalid\"\r\n        className={[\r\n          \"form-control\",\r\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\r\n          hideInput ? \"text-password\" : \"\",\r\n          disabled ? \"disabled\" : \"\",\r\n        ].join(\" \")}\r\n        disabled={disabled}\r\n      />\r\n      <label\r\n        htmlFor={id}\r\n        className={[\r\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\r\n          active || !(value === \"\" || value === null) ? \"active\" : \"\",\r\n        ].join(\" \")}\r\n      >\r\n        {!!label ? label : \"\"}\r\n      </label>\r\n      {!!errors && !!touched && (\r\n        <div className=\"invalid-feedback d-block\">{errors}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormikMdInput;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Header from \"./material_ui_components/Header/Header.js\";\r\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\r\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\r\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\r\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\r\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\r\nimport Card from \"./material_ui_components/Card/Card.js\";\r\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\r\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\r\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\r\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport image from \"./img/genesprDark.png\";\r\nimport * as Yup from \"yup\";\r\nimport axiosInstance from \"./axiosAPI\";\r\nimport { Formik, Field } from \"formik\";\r\nimport FormikMdInput from \"./FormikMDInput\";\r\nimport Notification from \"./Notification\"\r\nimport Paper from '@material-ui/core/Paper';\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MaterialUiLoginPage = (props) => {\r\n  const user = props.appState.user;\r\n  if (!!user) {\r\n    props.history.push(\"/\");\r\n  }\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  setTimeout(function () {\r\n    setCardAnimation(\"\");\r\n  }, 700);\r\n  const classes = useStyles();\r\n  const [notification, setNotification] = React.useState({isOpen: false, message:'',type:''})\r\n  const { ...rest } = props;\r\n  const FRS = \"Pole wymagane\";\r\n  const bgStyles = {\r\n    paperContainer: {\r\n        backgroundImage: `url(${image})`,\r\n        \r\n        minHeight: 1000,\r\n  \r\n       \r\n       \r\n  \r\n  \r\n       \r\n    },\r\n    examCardContainer: {\r\n      width: 700,\r\n      backgroundColor: '#FEFEFA',\r\n  \r\n      \r\n  },\r\n  \r\n    cardTitle: {\r\n      textAlign:'center'\r\n    }\r\n  \r\n  };\r\n  return (\r\n   \r\n      <div\r\n       \r\n      >\r\n          <Paper\r\n       style={bgStyles.paperContainer}\r\n      >\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card className={classes[cardAnimaton]}>\r\n                <Formik\r\n                  initialValues={{\r\n                    name: \"\",\r\n                    password: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    password: Yup.string()\r\n                      .min(8, \"Minimum 8 znaków\")\r\n                      .max(50, \"Przekroczono maksymalną ilość znaków!\")\r\n                      .required(FRS),\r\n                    name: Yup.string()\r\n                      .min(2, \"Minimum 8 znaków!\")\r\n                      .max(50, \"Przekroczono maksymalną ilość znaków!\")\r\n                      .required(FRS),\r\n                  })}\r\n                  onSubmit={(values, helpers) => {\r\n                    setTimeout(() => {\r\n                      helpers.setSubmitting(true);\r\n                      axiosInstance\r\n                        .post(\"/token/obtain/\", {\r\n                          username: values.name,\r\n                          password: values.password,\r\n                        })\r\n                        .then((response) => {\r\n                          axiosInstance.defaults.headers[\"Authorization\"] =\r\n                            \"JWT \" + response.data.access;\r\n                          localStorage.setItem(\r\n                            \"access_token\",\r\n                            response.data.access\r\n                          );\r\n                          localStorage.setItem(\r\n                            \"refresh_token\",\r\n                            response.data.refresh\r\n                          );\r\n                          helpers.setSubmitting(false);\r\n                          props.checkUser();\r\n                          props.history.push(\"/\");\r\n                        })\r\n                        .catch((error) => {\r\n                          // console.log(\"login error\", error.response);\r\n                          const errResponse = error.response;\r\n                          helpers.setSubmitting(false);\r\n                          if (\r\n                            errResponse.status === 401 &&\r\n                            errResponse.statusText === \"Unauthorized\"\r\n                          ) {\r\n                            helpers.setValues(\r\n                              {\r\n                                name: \"\",\r\n                                password: \"\",\r\n                              },\r\n                              false\r\n                            );\r\n                            helpers.setTouched(\r\n                              {\r\n                                name: false,\r\n                                password: false,\r\n                              },\r\n                              false\r\n                            );\r\n                            helpers.setFieldError(\r\n                              \"general\",\r\n                              \"Nierpawidłowa nazwa użytkownika lub hasło\"\r\n                            );\r\n                            setNotification({\r\n                              type:\"error\",\r\n                              isOpen:true,\r\n                              message:'Nieprawidłowa nazwa użytkownika lub hasło'\r\n                            })\r\n                          }\r\n                        });\r\n                    }, 400);\r\n                  }}\r\n                >\r\n                  {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                  }) => {\r\n                    console.log(\"talczed\", touched, \"errors\", errors);\r\n                    return (\r\n                      <form className={classes.form}>\r\n                        <CardHeader\r\n                          color=\"primary\"\r\n                          className={classes.cardHeader}\r\n                        >\r\n                          <h4>Logowanie</h4>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <CustomInput\r\n                            labelText=\"Nazwa użytkownika\"\r\n                            id=\"name\"\r\n                            error={!!errors.name}\r\n                            success={touched.name && !errors.name}\r\n                            formControlProps={{\r\n                              fullWidth: true,\r\n                            }}\r\n                            helperProps={{\r\n                              children: errors.name,\r\n                              error: true,\r\n                            }}\r\n                            inputProps={{\r\n                              type: \"text\",\r\n                              name: \"name\",\r\n                              onChange: handleChange,\r\n                              onBlur: handleBlur,\r\n                              value: values.name,\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <People className={classes.inputIconsColor} />\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                          <CustomInput\r\n                            labelText=\"Hasło\"\r\n                            id=\"password\"\r\n                            error={!!errors.password}\r\n                            success={touched.password && !errors.password}\r\n                            formControlProps={{\r\n                              fullWidth: true,\r\n                            }}\r\n                            helperProps={{\r\n                              children: errors.password,\r\n                              error: true,\r\n                            }}\r\n                            inputProps={{\r\n                              type: \"password\",\r\n                              name: \"password\",\r\n                              onChange: handleChange,\r\n                              onBlur: handleBlur,\r\n                              value: values.password,\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                   <LockIcon className={classes.inputIconsColor} />\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </CardBody>\r\n                        <CardFooter className={classes.cardFooter}>\r\n                        <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n                            <Button\r\n                          simple\r\n                          color=\"primary\"\r\n                          size=\"lg\"\r\n                          onClick={() => {\r\n                            handleSubmit();\r\n                          }}\r\n                        >\r\n                          Zaloguj się\r\n                        </Button>\r\n                        <Button\r\n                          simple\r\n                          color=\"primary\"\r\n                          size=\"lg\"\r\n                          onClick={() => {\r\n                            props.history.push(\"/requestresetpassword\");\r\n                          }}\r\n                        >\r\n                          Zapomniałem hasła\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                        </CardFooter>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n        </Paper>\r\n      </div>\r\n                  \r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default MaterialUiLoginPage;\r\n","import React from 'react'\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function Notification(props){\r\n\r\n    const {notification, setNotification} = props;\r\n\r\n    return (\r\n        <Snackbar\r\n        open = {notification.isOpen}\r\n        autoHideDuration ={30}\r\n        >\r\n            <Alert severity={notification.type}>\r\n                {notification.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n\r\n}","export default __webpack_public_path__ + \"29a2f630b088eabfaa8f98afec0658ab.png\";"],"sourceRoot":""}