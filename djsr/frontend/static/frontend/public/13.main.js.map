<<<<<<< HEAD
{"version":3,"sources":["webpack:///./djsr/frontend/src/components/FormikMDInput.js","webpack:///./djsr/frontend/src/components/RemindPassword.js"],"names":["FormikMdInput","name","touched","value","errors","icon","onChange","onBlur","label","id","type","hideInput","disableAutocomplete","disabled","prepend","useState","active","setActive","join","e","console","log","RemindPassword","props","state","done","email","Yup","shape","required","values","helpers","setTimeout","setSubmitting","axiosInstanceNoAuth","post","then","response","setState","error","errResponse","setValues","setTouched","setFieldError","handleChange","handleBlur","handleSubmit","isSubmitting","token","Component"],"mappings":"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","file":"13.main.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FormikMdInput = ({\r\n  name,\r\n  touched,\r\n  value,\r\n  errors,\r\n  icon,\r\n  onChange,\r\n  onBlur,\r\n  label,\r\n  id,\r\n  type,\r\n  hideInput,\r\n  disableAutocomplete,\r\n  disabled,\r\n  prepend,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  //todo repair prepend render\r\n\r\n  // console.log(\r\n  //   \"ninput\",\r\n  //   name,\r\n  //   active,\r\n  //   value === \"\",\r\n  //   value === null,\r\n  //   active || !(value == \"\" || value == null),\r\n  //     \"value\",\r\n  //     value\r\n  // );\r\n  return (\r\n    <div className=\"md-form form-group\">\r\n      {!!icon && (\r\n        <i\r\n          className={[\r\n            \"fa\",\r\n            icon,\r\n            \"prefix\",\r\n            touched ? (!errors ? \"text-success\" : \"red-text\") : \"\",\r\n          ].join(\" \")}\r\n        />\r\n      )}\r\n      {!!prepend && (\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">{prepend}</span>\r\n        </div>\r\n      )}\r\n      <input\r\n        name={name}\r\n        onChange={onChange}\r\n        onBlur={(e) => {\r\n          onBlur(e);\r\n          setActive(false);\r\n        }}\r\n        onFocus={() => {\r\n            console.log(\"input focus event\",name)\r\n          setActive(true);\r\n        }}\r\n        value={value}\r\n        id={id}\r\n        type={type}\r\n        autoComplete={disableAutocomplete ? \"off\" : \"on\"}\r\n        // className=\"form-control is-invalid\"\r\n        className={[\r\n          \"form-control\",\r\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\r\n          hideInput ? \"text-password\" : \"\",\r\n          disabled ? \"disabled\" : \"\",\r\n        ].join(\" \")}\r\n        disabled={disabled}\r\n      />\r\n      <label\r\n        htmlFor={id}\r\n        className={[\r\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\r\n          active || !(value === \"\" || value === null) ? \"active\" : \"\",\r\n        ].join(\" \")}\r\n      >\r\n        {!!label ? label : \"\"}\r\n      </label>\r\n      {!!errors && !!touched && (\r\n        <div className=\"invalid-feedback d-block\">{errors}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormikMdInput;\r\n","import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { axiosInstanceNoAuth } from \"./axiosAPI\";\r\nimport FormikMdInput from \"./FormikMDInput\";\r\n// import PropTypes from 'prop-types';\r\n\r\nclass RemindPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      done: null,\r\n    };\r\n  }\r\n  //\r\n  // componentWillMount() {\r\n  //\r\n  // }\r\n  //\r\n  // componentDidMount() {\r\n  //\r\n  // }\r\n  //\r\n  // componentWillReceiveProps(nextProps) {\r\n  //\r\n  // }\r\n  //\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //\r\n  // }\r\n  //\r\n  // componentWillUpdate(nextProps, nextState) {\r\n  //\r\n  // }\r\n  //\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //\r\n  // }\r\n  //\r\n  // componentWillUnmount() {\r\n  //\r\n  // }\r\n\r\n  render() {\r\n    if (this.state.done) {\r\n      return (\r\n        <MDBRow center>\r\n          <MDBCol md=\"6\" sm=\"8\" xs=\"12\" lg=\"6\" xl=\"4\">Sprawdz poczte</MDBCol>\r\n        </MDBRow>\r\n      );\r\n    }\r\n    return (\r\n      <MDBRow center>\r\n        <MDBCol md=\"6\" sm=\"8\" xs=\"12\" lg=\"6\" xl=\"4\">\r\n          <MDBCard>\r\n            <MDBCardBody className=\"p-md-5 p-lg-5 p-xl-5\">\r\n              <Formik\r\n                initialValues={{\r\n                  email: \"\",\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                  email: Yup.string()\r\n                    .email(\"NieprawidÅ‚owy adres e-mail\")\r\n                    .required(\"Wymagany dres e-mail\"),\r\n                })}\r\n                onSubmit={(values, helpers) => {\r\n                  setTimeout(() => {\r\n                    helpers.setSubmitting(true);\r\n                    axiosInstanceNoAuth\r\n                      .post(\"/user/resetsend/\", {\r\n                        email: values.email,\r\n                      })\r\n                      .then((response) => {\r\n                        helpers.setSubmitting(false);\r\n                        this.setState({\r\n                          done: true,\r\n                        });\r\n                      })\r\n                      .catch((error) => {\r\n                        // console.log(\"login error\", error.response);\r\n                        const errResponse = error.response;\r\n                        helpers.setSubmitting(false);\r\n                        helpers.setValues(\r\n                          {\r\n                            email: \"\",\r\n                          },\r\n                          false\r\n                        );\r\n                        helpers.setTouched(\r\n                          {\r\n                            email: false,\r\n                          },\r\n                          false\r\n                        );\r\n                        helpers.setFieldError(\r\n                          \"general\",\r\n                          \"Nie isntieje konto o takim adresie E-mail\"\r\n                        );\r\n                      });\r\n                  }, 500);\r\n                }}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                }) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <p className=\"h3 text-center mb-4\">Przypomnij hasÅ‚o</p>\r\n                    <div className=\"grey-text\">\r\n                      <FormikMdInput\r\n                        label=\"TwÃ³j adres E-mail\"\r\n                        icon=\"fa-envelope\"\r\n                        errors={errors.email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        touched={touched.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        disabled={isSubmitting}\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <MDBBtn\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        WyÅ›lij\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n              {!!this.state.token && <div>{this.state.token}</div>}\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\n// RemindPassword.propTypes = {};\r\n\r\nexport default RemindPassword;\r\n"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///./djsr/frontend/src/components/MDBLazy/MDBLazyComponents.js","webpack:///./djsr/frontend/src/components/MDBLazy/MDBLazyContainer.js"],"names":["MDBContainer","MDBContainerL","MDBCollapse","MDBCollapseL","MDBDropdown","MDBDropdownL","MDBDropdownItem","MDBDropdownItemL","MDBDropdownMenu","MDBDropdownMenuL","MDBDropdownToggle","MDBDropdownToggleL","MDBIcon","MDBIconL","MDBNavbar","MDBNavbarL","MDBNavbarBrand","MDBNavbarBrandL","MDBNavbarNav","MDBNavbarNavl","MDBNavbarToggler","MDBNavbarTogglerL","MDBNavItem","MDBNavItemL","MDBNavLink","MDBNavLinkL"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AAGO,IAAMA,YAAY,GAAGC,qDAArB;AACA,IAAMC,WAAW,GAAGC,oDAApB;AACA,IAAMC,WAAW,GAAGC,oDAApB;AACA,IAAMC,eAAe,GAAGC,wDAAxB;AACA,IAAMC,eAAe,GAAGC,wDAAxB;AACA,IAAMC,iBAAiB,GAAGC,0DAA1B;AACA,IAAMC,OAAO,GAAGC,gDAAhB;AACA,IAAMC,SAAS,GAAGC,kDAAlB;AACA,IAAMC,cAAc,GAAGC,uDAAvB;AACA,IAAMC,YAAY,GAAGC,qDAArB;AACA,IAAMC,gBAAgB,GAAGC,yDAAzB;AACA,IAAMC,UAAU,GAAGC,mDAAnB;AACA,IAAMC,UAAU,GAAGC,mDAAnB,C;;;;;;;;;;;;AC9BP;AAAA;AAAA;AAAA","file":"13.main.js","sourcesContent":["import {\n  MDBContainer as MDBContainerL,\n  MDBCollapse as MDBCollapseL,\n  MDBDropdown as MDBDropdownL,\n  MDBDropdownItem as MDBDropdownItemL,\n  MDBDropdownMenu as MDBDropdownMenuL,\n  MDBDropdownToggle as MDBDropdownToggleL,\n  MDBIcon as MDBIconL,\n  MDBNavbar as MDBNavbarL,\n  MDBNavbarBrand as MDBNavbarBrandL,\n  MDBNavbarNav as MDBNavbarNavl,\n  MDBNavbarToggler as MDBNavbarTogglerL,\n  MDBNavItem as MDBNavItemL,\n  MDBNavLink as MDBNavLinkL,\n} from \"mdbreact\";\n/*\nexport const \n */\nexport const MDBContainer = MDBContainerL;\nexport const MDBCollapse = MDBCollapseL;\nexport const MDBDropdown = MDBDropdownL;\nexport const MDBDropdownItem = MDBDropdownItemL;\nexport const MDBDropdownMenu = MDBDropdownMenuL;\nexport const MDBDropdownToggle = MDBDropdownToggleL;\nexport const MDBIcon = MDBIconL;\nexport const MDBNavbar = MDBNavbarL;\nexport const MDBNavbarBrand = MDBNavbarBrandL;\nexport const MDBNavbarNav = MDBNavbarNavl;\nexport const MDBNavbarToggler = MDBNavbarTogglerL;\nexport const MDBNavItem = MDBNavItemL;\nexport const MDBNavLink = MDBNavLinkL;\n","export { MDBContainer as default } from \"./MDBLazyComponents\";\n"],"sourceRoot":""}
>>>>>>> origin/Deployment
