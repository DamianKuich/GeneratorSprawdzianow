{"version":3,"sources":["webpack:///./djsr/frontend/src/components/FormikMDInput.js","webpack:///./djsr/frontend/src/components/MDBLazy/MDBLazyComponents.js","webpack:///./djsr/frontend/src/components/UserAccountManager.js"],"names":["FormikMdInput","name","touched","value","errors","icon","onChange","onBlur","label","id","type","hideInput","disableAutocomplete","disabled","prepend","useState","active","setActive","join","e","console","log","MDBContainer","MDBContainerL","MDBCollapse","MDBCollapseL","MDBDropdown","MDBDropdownL","MDBDropdownItem","MDBDropdownItemL","MDBDropdownMenu","MDBDropdownMenuL","MDBDropdownToggle","MDBDropdownToggleL","MDBIcon","MDBIconL","MDBNavbar","MDBNavbarL","MDBNavbarBrand","MDBNavbarBrandL","MDBNavbarNav","MDBNavbarNavl","MDBNavbarToggler","MDBNavbarTogglerL","MDBNavItem","MDBNavItemL","MDBNavLink","MDBNavLinkL","UserAccountManager","props","checkUser","userData","setState","isUserChecked","userInfo","userDataForm","current","setFieldValue","appState","user","username","setFieldTouched","userPasswordForm","setValues","password","passwordConfirm","oldPassword","setTouched","activeItem","state","locked","React","createRef","userEmailForm","toggle","Yup","shape","min","max","required","values","helpers","setTimeout","setSubmitting","axiosInstance","put","then","response","setUser","data","setStatus","error","errResponse","setFieldError","handleChange","handleBlur","handleSubmit","isSubmitting","status","oneOf","oldpassword","email","Component","propTypes"],"mappings":"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","file":"4.main.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst FormikMdInput = ({\n  name,\n  touched,\n  value,\n  errors,\n  icon,\n  onChange,\n  onBlur,\n  label,\n  id,\n  type,\n  hideInput,\n  disableAutocomplete,\n  disabled,\n  prepend,\n}) => {\n  const [active, setActive] = useState(false);\n  //todo repair prepend render\n\n  // console.log(\n  //   \"ninput\",\n  //   name,\n  //   active,\n  //   value === \"\",\n  //   value === null,\n  //   active || !(value == \"\" || value == null),\n  //     \"value\",\n  //     value\n  // );\n  return (\n    <div className=\"md-form form-group\">\n      {!!icon && (\n        <i\n          className={[\n            \"fa\",\n            icon,\n            \"prefix\",\n            touched ? (!errors ? \"text-success\" : \"red-text\") : \"\",\n          ].join(\" \")}\n        />\n      )}\n      {!!prepend && (\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">{prepend}</span>\n        </div>\n      )}\n      <input\n        name={name}\n        onChange={onChange}\n        onBlur={(e) => {\n          onBlur(e);\n          setActive(false);\n        }}\n        onFocus={() => {\n            console.log(\"input focus event\",name)\n          setActive(true);\n        }}\n        value={value}\n        id={id}\n        type={type}\n        autoComplete={disableAutocomplete ? \"off\" : \"on\"}\n        // className=\"form-control is-invalid\"\n        className={[\n          \"form-control\",\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          hideInput ? \"text-password\" : \"\",\n          disabled ? \"disabled\" : \"\",\n        ].join(\" \")}\n        disabled={disabled}\n      />\n      <label\n        htmlFor={id}\n        className={[\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          active || !(value === \"\" || value === null) ? \"active\" : \"\",\n        ].join(\" \")}\n      >\n        {!!label ? label : \"\"}\n      </label>\n      {!!errors && !!touched && (\n        <div className=\"invalid-feedback d-block\">{errors}</div>\n      )}\n    </div>\n  );\n};\n\nexport default FormikMdInput;\n","import {\n  MDBContainer as MDBContainerL,\n  MDBCollapse as MDBCollapseL,\n  MDBDropdown as MDBDropdownL,\n  MDBDropdownItem as MDBDropdownItemL,\n  MDBDropdownMenu as MDBDropdownMenuL,\n  MDBDropdownToggle as MDBDropdownToggleL,\n  MDBIcon as MDBIconL,\n  MDBNavbar as MDBNavbarL,\n  MDBNavbarBrand as MDBNavbarBrandL,\n  MDBNavbarNav as MDBNavbarNavl,\n  MDBNavbarToggler as MDBNavbarTogglerL,\n  MDBNavItem as MDBNavItemL,\n  MDBNavLink as MDBNavLinkL,\n} from \"mdbreact\";\n/*\nexport const \n */\nexport const MDBContainer = MDBContainerL;\nexport const MDBCollapse = MDBCollapseL;\nexport const MDBDropdown = MDBDropdownL;\nexport const MDBDropdownItem = MDBDropdownItemL;\nexport const MDBDropdownMenu = MDBDropdownMenuL;\nexport const MDBDropdownToggle = MDBDropdownToggleL;\nexport const MDBIcon = MDBIconL;\nexport const MDBNavbar = MDBNavbarL;\nexport const MDBNavbarBrand = MDBNavbarBrandL;\nexport const MDBNavbarNav = MDBNavbarNavl;\nexport const MDBNavbarToggler = MDBNavbarTogglerL;\nexport const MDBNavItem = MDBNavItemL;\nexport const MDBNavLink = MDBNavLinkL;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBNav,\n  MDBRow,\n  MDBTabContent,\n  MDBTabPane,\n} from \"mdbreact\";\nimport { MDBNavItem, MDBNavLink } from \"./MDBLazy/MDBLazyComponents\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axiosInstance from \"./axiosAPI\";\nimport FormikMdInput from \"./FormikMDInput\";\n\nclass UserAccountManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"2\",\n      isUserChecked: false,\n      userInfo: null,\n      locked: false,\n    };\n    this.userDataForm = React.createRef();\n    this.userPasswordForm = React.createRef();\n    this.userEmailForm = React.createRef();\n  }\n\n  checkUser = () => {\n    this.props.checkUser((userData) => {\n      this.setState({ isUserChecked: true, userInfo: userData });\n    });\n  };\n\n  componentDidMount() {\n    this.checkUser();\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //\n  // }\n  //\n  // shouldComponentUpdate(nextProps, nextState) {\n  //\n  // }\n  //\n  // componentWillUpdate(nextProps, nextState) {\n  //\n  // }\n  //\n  // componentDidUpdate(prevProps, prevState) {\n  //\n  // }\n  //\n  // componentWillUnmount() {\n  //\n  // }\n\n  toggle = (id) => {\n    console.log(this.userDataForm);\n    this.userDataForm.current.setFieldValue(\n      \"name\",\n      this.props.appState.user.username,\n      false\n    );\n    this.userDataForm.current.setFieldTouched(\"name\", false, false);\n    this.userPasswordForm.current.setValues(\n      { password: \"\", passwordConfirm: \"\", oldPassword: \"\" },\n      false\n    );\n    this.userPasswordForm.current.setTouched({\n      password: false,\n      passwordConfirm: false,\n      oldPassword: false,\n    });\n    // this.userEmailForm;\n    this.setState({ activeItem: id });\n  };\n  render() {\n    let activeItem = this.state.activeItem;\n    let locked = this.state.locked;\n    let isUserChecked = this.state.isUserChecked;\n    if (!isUserChecked) return <div>Loading</div>;\n    return (\n      <MDBContainer>\n        <MDBCard>\n          <MDBCardBody>\n            <MDBRow className=\"w-auto\">\n              <MDBCol xl={\"3\"} className=\"border-right\">\n                <MDBNav className=\"nav-pills flex-column nav-justified font-weight-bold\">\n                  {/*<MDBNavItem>*/}\n                  {/*  <MDBNavLink*/}\n                  {/*    link*/}\n                  {/*    to=\"#\"*/}\n                  {/*    active={this.state.activeItem === \"1\"}*/}\n                  {/*    onClick={() => {*/}\n                  {/*      this.toggle(\"1\");*/}\n                  {/*    }}*/}\n                  {/*    role=\"tab\"*/}\n                  {/*    disabled={locked}*/}\n                  {/*  >*/}\n                  {/*    Dane podstawowe*/}\n                  {/*  </MDBNavLink>*/}\n                  {/*</MDBNavItem>*/}\n                  <MDBNavItem>\n                    <MDBNavLink\n                      link\n                      to=\"#\"\n                      active={this.state.activeItem === \"2\"}\n                      onClick={() => {\n                        this.toggle(\"2\");\n                      }}\n                      role=\"tab\"\n                      disabled={locked}\n                    >\n                      Zmień hasło\n                    </MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink\n                      link\n                      to=\"#\"\n                      active={this.state.activeItem === \"3\"}\n                      onClick={() => {\n                        this.toggle(\"3\");\n                      }}\n                      role=\"tab\"\n                      disabled={locked}\n                    >\n                      Zmień adres E-mail\n                    </MDBNavLink>\n                  </MDBNavItem>\n                </MDBNav>\n              </MDBCol>\n              <MDBCol xl={\"9\"}>\n                <MDBTabContent activeItem={this.state.activeItem}>\n                  <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                    <Formik\n                      // ref={this.userDataForm}\n                      innerRef={this.userDataForm}\n                      initialValues={{\n                        name: this.state.userInfo.username,\n                      }}\n                      validationSchema={Yup.object().shape({\n                        name: Yup.string()\n                          .min(3, \"Too Short!\")\n                          .max(50, \"Too Long!\")\n                          .required(\"Pole wymagane\"),\n                      })}\n                      onSubmit={(values, helpers) => {\n                        setTimeout(() => {\n                          this.setState({ locked: true });\n                          helpers.setSubmitting(true);\n                          axiosInstance\n                            .put(\"/user/update/\", {\n                              username: values.name,\n                            })\n                            .then((response) => {\n                              this.props.setUser(response.data);\n                              helpers.setStatus(\"Pomyslnie zmieniono dane\");\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                            })\n                            .catch((error) => {\n                              // console.log(\"login error\", error.response);\n                              const errResponse = error.response;\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                              helpers.setValues(\n                                {\n                                  name: \"\",\n                                },\n                                false\n                              );\n                              helpers.setTouched(\n                                {\n                                  name: false,\n                                },\n                                false\n                              );\n                              helpers.setFieldError(\n                                \"name\",\n                                \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\n                              );\n                            });\n                        }, 400);\n                      }}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        status,\n                      }) => (\n                        <Form onSubmit={handleSubmit}>\n                          <p className=\"h3 text-center mb-4\">Dane podstawowe</p>\n                          <div className=\"grey-text\">\n                            <FormikMdInput\n                              label=\"Nazwa użytkownika\"\n                              icon=\"fa-user\"\n                              errors={errors.name}\n                              name=\"name\"\n                              id=\"name\"\n                              touched={touched.name}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.name}\n                              disabled={isSubmitting || locked}\n                            />\n                          </div>\n                          {!!status && <div>Pomyslnie zmieniono dane</div>}\n                          <div className=\"text-center\">\n                            <MDBBtn\n                              color=\"primary\"\n                              type=\"submit\"\n                              disabled={isSubmitting || locked}\n                            >\n                              Zmień\n                            </MDBBtn>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </MDBTabPane>\n                  <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                    <Formik\n                      // ref={this.userDataForm}\n                      innerRef={this.userPasswordForm}\n                      initialValues={{\n                        password: \"\",\n                        passwordConfirm: \"\",\n                        oldPassword: \"\",\n                      }}\n                      validationSchema={Yup.object().shape({\n                        password: Yup.string()\n                          .min(8, \"Too Short!\")\n                          .max(50, \"Too Long!\")\n                          .required(\"Pole wymagane\")\n                          .oneOf(\n                            [Yup.ref(\"passwordConfirm\")],\n                            \"Hasła są różne\"\n                          ),\n                        oldPassword: Yup.string()\n                          .min(8, \"Too Short!\")\n                          .max(50, \"Too Long!\")\n                          .required(\"Pole wymagane\"),\n                        passwordConfirm: Yup.string()\n                          .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\n                          .required(\"Pole wymagane\"),\n                      })}\n                      onSubmit={(values, helpers) => {\n                        setTimeout(() => {\n                          this.setState({ locked: true });\n                          helpers.setSubmitting(true);\n                          axiosInstance\n                            .put(\"/user/update/\", {\n                              password: values.password,\n                              oldpassword: values.oldPassword,\n                            })\n                            .then((response) => {\n                              this.props.setUser(response.data);\n                              helpers.setStatus(\"Pomyslnie zmieniono hasło\");\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                            })\n                            .catch((error) => {\n                              helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\n                              console.log(\"chngpass error\", error.response);\n                              const errResponse = error.response;\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                              helpers.setValues(\n                                {\n                                  password: \"\",\n                                  oldPassword: \"\",\n                                  passwordConfirm:\"\"\n\n                                },\n                                false\n                              );\n                              helpers.setTouched(\n                                {\n                                  password: false,\n                                  oldPassword: false,\n                                  passwordConfirm:false\n                                },\n                                false\n                              );\n                              helpers.setFieldError(\n                                \"oldPassword\",\n                                \"Podano nieprawidłowe stare hasło\"\n                              );\n\n                            });\n                        }, 400);\n                      }}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        status,\n                      }) => (\n                        <Form onSubmit={handleSubmit}>\n                          {/*{console.log(\"pass form\",values,touched,errors)}*/}\n                          <p className=\"h3 text-center mb-4\">Zmień hasło</p>\n                          <div className=\"grey-text\">\n                            <FormikMdInput\n                              label=\"Stare hasło\"\n                              icon=\"fa-lock\"\n                              errors={errors.oldPassword}\n                              name=\"oldPassword\"\n                              id=\"oldPassword\"\n                              touched={touched.oldPassword}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.oldPassword}\n                              disabled={isSubmitting || locked}\n                              hideInput\n                              type=\"password\"\n                            />\n                            <FormikMdInput\n                              label=\"Nowe hasło\"\n                              icon=\"fa-lock\"\n                              errors={errors.password}\n                              name=\"password\"\n                              id=\"password\"\n                              type=\"password\"\n                              touched={touched.password}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.password}\n                              disabled={isSubmitting || locked}\n                              hideInput\n                            />\n                            <FormikMdInput\n                              label=\"Powtórz nowe hasło\"\n                              icon=\"fa-lock\"\n                              errors={errors.passwordConfirm}\n                              name=\"passwordConfirm\"\n                              id=\"passwordConfirm\"\n                              type=\"password\"\n                              touched={touched.passwordConfirm}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.passwordConfirm}\n                              hideInput\n                              disabled={isSubmitting || locked}\n                            />\n                          </div>\n                          {!!status && <div>{status}</div>}\n                          <div className=\"text-center\">\n                            <MDBBtn\n                              color=\"primary\"\n                              type=\"submit\"\n                              disabled={isSubmitting || locked}\n                            >\n                              Zmień\n                            </MDBBtn>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </MDBTabPane>\n                  <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                    <Formik\n                      // ref={this.userDataForm}\n                      innerRef={this.userEmailForm}\n                      initialValues={{\n                        email: this.state.userInfo.email,\n                      }}\n                      validationSchema={Yup.object().shape({\n                        email: Yup.string()\n                    .email(\"Nieprawidłowy adres e-mail\")\n                    .required(\"Pole wymagane\"),\n                      })}\n                      onSubmit={(values, helpers) => {\n                        setTimeout(() => {\n                          this.setState({ locked: true });\n                          helpers.setSubmitting(true);\n                          axiosInstance\n                            .put(\"/user/update/\", {\n                              email: values.email,\n                            })\n                            .then((response) => {\n                              this.props.setUser(response.data);\n                              helpers.setStatus(\"Pomyslnie zmieniono email\");\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                            })\n                            .catch((error) => {\n                              // console.log(\"login error\", error.response);\n                              const errResponse = error.response;\n                              helpers.setSubmitting(false);\n                              this.setState({ locked: false });\n                              helpers.setValues(\n                                {\n                                  email: \"\",\n                                },\n                                false\n                              );\n                              helpers.setTouched(\n                                {\n                                  email: false,\n                                },\n                                false\n                              );\n                              helpers.setFieldError(\n                                \"name\",\n                                \"E-mail jest w użyciu lub jest nieprawidłowy.\"\n                              );\n                            });\n                        }, 400);\n                      }}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        status,\n                      }) => (\n                        <Form onSubmit={handleSubmit}>\n                          <p className=\"h3 text-center mb-4\">Zmień adres E-mail</p>\n                          <div className=\"grey-text\">\n                            <FormikMdInput\n                              label=\"Adres e-mail\"\n                              icon=\"fa-envelope\"\n                              errors={errors.email}\n                              name=\"email\"\n                              id=\"email\"\n                              touched={touched.name}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.email}\n                              disabled={isSubmitting || locked}\n                            />\n                          </div>\n                          {!!status && <div>{status}</div>}\n                          <div className=\"text-center\">\n                            <MDBBtn\n                              color=\"primary\"\n                              type=\"submit\"\n                              disabled={isSubmitting || locked}\n                            >\n                              Zmień\n                            </MDBBtn>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </MDBTabPane>\n                </MDBTabContent>\n              </MDBCol>\n            </MDBRow>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBContainer>\n    );\n  }\n}\n\nUserAccountManager.propTypes = {};\n\nexport default UserAccountManager;\n"],"sourceRoot":""}