{"version":3,"sources":["webpack:///./djsr/frontend/src/components/FormikMDInput.js","webpack:///./djsr/frontend/src/components/MaterialUiLoginPage.js","webpack:///./djsr/frontend/src/components/Notification.js"],"names":["FormikMdInput","name","touched","value","errors","icon","onChange","onBlur","label","id","type","hideInput","disableAutocomplete","disabled","prepend","useState","active","setActive","join","e","console","log","useStyles","makeStyles","styles","MaterialUiLoginPage","props","user","appState","history","push","React","cardAnimaton","setCardAnimation","setTimeout","classes","isOpen","message","notification","setNotification","rest","FRS","pageHeader","backgroundImage","image","backgroundSize","backgroundPosition","container","password","Yup","shape","min","max","required","values","helpers","setSubmitting","axiosInstance","post","username","then","response","defaults","headers","data","access","localStorage","setItem","refresh","checkUser","error","errResponse","status","statusText","setValues","setTouched","setFieldError","handleChange","handleBlur","handleSubmit","isSubmitting","form","cardHeader","fullWidth","children","endAdornment","inputIconsColor","cardFooter","Notification"],"mappings":"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","file":"12.main.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst FormikMdInput = ({\n  name,\n  touched,\n  value,\n  errors,\n  icon,\n  onChange,\n  onBlur,\n  label,\n  id,\n  type,\n  hideInput,\n  disableAutocomplete,\n  disabled,\n  prepend,\n}) => {\n  const [active, setActive] = useState(false);\n  //todo repair prepend render\n\n  // console.log(\n  //   \"ninput\",\n  //   name,\n  //   active,\n  //   value === \"\",\n  //   value === null,\n  //   active || !(value == \"\" || value == null),\n  //     \"value\",\n  //     value\n  // );\n  return (\n    <div className=\"md-form form-group\">\n      {!!icon && (\n        <i\n          className={[\n            \"fa\",\n            icon,\n            \"prefix\",\n            touched ? (!errors ? \"text-success\" : \"red-text\") : \"\",\n          ].join(\" \")}\n        />\n      )}\n      {!!prepend && (\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">{prepend}</span>\n        </div>\n      )}\n      <input\n        name={name}\n        onChange={onChange}\n        onBlur={(e) => {\n          onBlur(e);\n          setActive(false);\n        }}\n        onFocus={() => {\n            console.log(\"input focus event\",name)\n          setActive(true);\n        }}\n        value={value}\n        id={id}\n        type={type}\n        autoComplete={disableAutocomplete ? \"off\" : \"on\"}\n        // className=\"form-control is-invalid\"\n        className={[\n          \"form-control\",\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          hideInput ? \"text-password\" : \"\",\n          disabled ? \"disabled\" : \"\",\n        ].join(\" \")}\n        disabled={disabled}\n      />\n      <label\n        htmlFor={id}\n        className={[\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          active || !(value === \"\" || value === null) ? \"active\" : \"\",\n        ].join(\" \")}\n      >\n        {!!label ? label : \"\"}\n      </label>\n      {!!errors && !!touched && (\n        <div className=\"invalid-feedback d-block\">{errors}</div>\n      )}\n    </div>\n  );\n};\n\nexport default FormikMdInput;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\nimport LockIcon from '@material-ui/icons/Lock';\nimport Header from \"./material_ui_components/Header/Header.js\";\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\nimport Card from \"./material_ui_components/Card/Card.js\";\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport image from \"./img/genspr-parralax-bg.png\";\nimport * as Yup from \"yup\";\nimport axiosInstance from \"./axiosAPI\";\nimport { Formik, Field } from \"formik\";\nimport FormikMdInput from \"./FormikMDInput\";\nimport Notification from \"./Notification\"\n\nconst useStyles = makeStyles(styles);\n\nconst MaterialUiLoginPage = (props) => {\n  const user = props.appState.user;\n  if (!!user) {\n    props.history.push(\"/\");\n  }\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const [notification, setNotification] = React.useState({isOpen: false, message:'',type:''})\n  const { ...rest } = props;\n  const FRS = \"Pole wymagane\";\n  return (\n    <div>\n            <Notification\n      notification = {notification}\n      setNotification = {setNotification}\n      \n      ></Notification>\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\",\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n                <Formik\n                  initialValues={{\n                    name: \"\",\n                    password: \"\",\n                  }}\n                  validationSchema={Yup.object().shape({\n                    password: Yup.string()\n                      .min(8, \"Too Short!\")\n                      .max(50, \"Too Long!\")\n                      .required(FRS),\n                    name: Yup.string()\n                      .min(2, \"Too Short!\")\n                      .max(50, \"Too Long!\")\n                      .required(FRS),\n                  })}\n                  onSubmit={(values, helpers) => {\n                    setTimeout(() => {\n                      helpers.setSubmitting(true);\n                      axiosInstance\n                        .post(\"/token/obtain/\", {\n                          username: values.name,\n                          password: values.password,\n                        })\n                        .then((response) => {\n                          axiosInstance.defaults.headers[\"Authorization\"] =\n                            \"JWT \" + response.data.access;\n                          localStorage.setItem(\n                            \"access_token\",\n                            response.data.access\n                          );\n                          localStorage.setItem(\n                            \"refresh_token\",\n                            response.data.refresh\n                          );\n                          helpers.setSubmitting(false);\n                          props.checkUser();\n                          props.history.push(\"/\");\n                        })\n                        .catch((error) => {\n                          // console.log(\"login error\", error.response);\n                          const errResponse = error.response;\n                          helpers.setSubmitting(false);\n                          if (\n                            errResponse.status === 401 &&\n                            errResponse.statusText === \"Unauthorized\"\n                          ) {\n                            helpers.setValues(\n                              {\n                                name: \"\",\n                                password: \"\",\n                              },\n                              false\n                            );\n                            helpers.setTouched(\n                              {\n                                name: false,\n                                password: false,\n                              },\n                              false\n                            );\n                            helpers.setFieldError(\n                              \"general\",\n                              \"Nierpawidłowa nazwa użytkownika lub hasło\"\n                            );\n                            setNotification({\n                              type:\"error\",\n                              isOpen:true,\n                              message:'Nieprawidłowa nazwa użytkownika lub hasło'\n                            })\n                          }\n                        });\n                    }, 400);\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                  }) => {\n                    console.log(\"talczed\", touched, \"errors\", errors);\n                    return (\n                      <form className={classes.form}>\n                        <CardHeader\n                          color=\"primary\"\n                          className={classes.cardHeader}\n                        >\n                          <h4>Logowanie</h4>\n                        </CardHeader>\n                        <CardBody>\n                          <CustomInput\n                            labelText=\"Nazwa użytkownika\"\n                            id=\"name\"\n                            error={!!errors.name}\n                            success={touched.name && !errors.name}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            helperProps={{\n                              children: errors.name,\n                              error: true,\n                            }}\n                            inputProps={{\n                              type: \"text\",\n                              name: \"name\",\n                              onChange: handleChange,\n                              onBlur: handleBlur,\n                              value: values.name,\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <People className={classes.inputIconsColor} />\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                          <CustomInput\n                            labelText=\"Hasło\"\n                            id=\"password\"\n                            error={!!errors.password}\n                            success={touched.password && !errors.password}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            helperProps={{\n                              children: errors.password,\n                              error: true,\n                            }}\n                            inputProps={{\n                              type: \"password\",\n                              name: \"password\",\n                              onChange: handleChange,\n                              onBlur: handleBlur,\n                              value: values.password,\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                   <LockIcon className={classes.inputIconsColor} />\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        </CardBody>\n                        <CardFooter className={classes.cardFooter}>\n                        <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n                            <Button\n                          simple\n                          color=\"primary\"\n                          size=\"lg\"\n                          onClick={() => {\n                            handleSubmit();\n                          }}\n                        >\n                          Zaloguj się\n                        </Button>\n                        <Button\n                          simple\n                          color=\"primary\"\n                          size=\"lg\"\n                          onClick={() => {\n                            props.history.push(\"/requestresetpassword\");\n                          }}\n                        >\n                          Zapomniałem hasła\n                        </Button>\n                      </ButtonGroup>\n                        </CardFooter>\n                      </form>\n                    );\n                  }}\n                </Formik>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n\n    </div>\n    \n  );\n};\n\nexport default MaterialUiLoginPage;\n","import React from 'react'\nimport { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nexport default function Notification(props){\n\n    const {notification, setNotification} = props;\n\n    return (\n        <Snackbar\n        open = {notification.isOpen}\n        autoHideDuration ={30}\n        >\n            <Alert severity={notification.type}>\n                {notification.message}\n            </Alert>\n        </Snackbar>\n    )\n\n\n}"],"sourceRoot":""}