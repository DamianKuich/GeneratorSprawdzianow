{"version":3,"sources":["webpack:///./djsr/frontend/src/components/AutoGeneTaskParser.js","webpack:///./djsr/frontend/src/components/MaterialUiFenerator.js","webpack:///./djsr/frontend/src/components/img/genspr-parralax-bg.png","webpack:///./node_modules/@material-ui/icons/Delete.js","webpack:///./node_modules/@material-ui/icons/Favorite.js"],"names":["taskParser","task","console","log","newTask","JSON","parse","stringify","answers","correctans","replace","wronganswers","currentAnswers","answersIndexes","maxPoints","points","tasksParser","tasks","map","useStyles","makeStyles","styles","Fenerator","props","FRS","user","appState","React","useState","editView","setEditView","parsedTasks","setParsedTasks","strongToken","useParams","id","history","useHistory","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","image","backgroundSize","backgroundPosition","container","ileotw","ilezamk","level","skills","groups","Yup","shape","required","values","helpers","setSubmitting","axiosInstance","post","then","response","randomtasks","data","put","push","error","setStatus","errResponse","setState","locked","setValues","setTouched","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","cardHeader","MaterialFormikField","fullWidth","endAdornment","cardFooter"],"mappings":"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","file":"11.main.js","sourcesContent":["export const taskParser = (task) => {\n    console.log(\"taskparser\",task)\n    let newTask = JSON.parse(JSON.stringify(task));\n    // console.log(\"taskparser parsed\", newTask)\n    // let draggedItem\n    newTask.answers={}\n    newTask.correctans = JSON.parse(newTask.correctans.replace(/'/g, '\"'))\n    newTask.wronganswers = JSON.parse(newTask.wronganswers.replace(/'/g, '\"'))\n    newTask.answers={correctans:newTask.correctans,wronganswers:newTask.wronganswers}\n    newTask.currentAnswers={correctans:newTask.correctans,wronganswers:newTask.wronganswers,answersIndexes:[{\"index\":1,\"isCorrect\":false},{\"index\":0,\"isCorrect\":true},{\"index\":2,\"isCorrect\":false},{\"index\":0,\"isCorrect\":false}]}\n  \n    newTask.maxPoints = JSON.parse(newTask.points)\n    \n    \n    // newTask.dataset = newTask.dataset.map((dataSet) => {\n    //   dataSet.answers = dataSet.answers.map((answer) => {\n    //     answer.allanswers = JSON.parse(answer.allanswers.replace(/'/g, '\"'));\n    //     answer.correctans = JSON.parse(answer.correctans.replace(/'/g, '\"'));\n    //     return answer\n    //   });\n    //   dataSet.answers = dataSet.answers[0];\n    //   return dataSet\n    // });\n    // console.log(\"oldtask\", task,\"new\", newTask)\n  \n  \n    \n  \n  \n    console.log(\"taskparser nn\",newTask)\n    return newTask;\n  };\n  \n  const tasksParser = (tasks) => {\n    return tasks.map(taskParser);\n  };\n  \n  export default tasksParser;\n  \n  ","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nimport Header from \"./material_ui_components/Header/Header.js\";\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\nimport Card from \"./material_ui_components/Card/Card.js\";\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\nimport { useParams } from \"react-router\";\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"./img/genspr-parralax-bg.png\";\nimport * as Yup from \"yup\";\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\nimport { Formik, Field } from \"formik\";\nimport MaterialFormikField from \"./MaterialFormikField\";\nimport { string } from \"prop-types\";\nimport taskParser from './AutoGeneTaskParser'\nimport { useHistory } from \"react-router-dom\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(styles);\n\n\n\nconst Fenerator = (props) => {\n  const FRS = \"Pole wymagane\";\n  const user = props.appState.user;\n\n  const [editView, setEditView] = React.useState(\"password\");\n  const [parsedTasks, setParsedTasks] = React.useState(null);\n  const strongToken = useParams().id;\n  console.log(strongToken)\n  const history = useHistory();\n\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const { ...rest } = props;\n  return (\n    <div>\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\",\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n\n{editView==\"password\" ? (\n        \n        <Formik\n        initialValues={{\n            ileotw: \"0\",\n            ilezamk: \"0\",\n            level: \"0\",\n            skills: \"0\",\n            groups: \"0\"\n        }}\n        validationSchema={Yup.object().shape({\n            ileotw: Yup.string()\n            .required(\"Pole wymagane\"),\n             \n\n            ilezamk: Yup.string()\n              .required(\"Pole wymagane\"),\n              level: Yup.string()\n              .required(\"Pole wymagane\"),\n              skills: Yup.string()\n              .required(\"Pole wymagane\"),\n              groups: Yup.string()\n              .required(\"Pole wymagane\"),\n          })}\n          onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              helpers.setSubmitting(true);\n              axiosInstance\n                .post(`/user/getrandomtasks/`, {\n                ileotw: values.ileotw,\n                ilezamk: values.ilezamk,\n                level:values.level,\n                skills:values.skills,\n                groups:values.groups\n              })\n                .then((response) => {\n                    \n                   let randomtasks = JSON.stringify(taskParser(response.data))\n                    \n                  console.log(randomtasks)\n                  console.log(strongToken)\n                   axiosInstance.put(`/user/maketest/`, {\n                    id:strongToken,\n                    tasks:randomtasks\n                  }).then((response)=>{\n                    history.push(`/editor/${strongToken}`);\n                  })\n\n\n                })\n                .catch((error) => {\n                  helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\n                  console.log(\"chngpass error\", error.response);\n                  const errResponse = error.response;\n                  helpers.setSubmitting(false);\n                  this.setState({ locked: false });\n                  helpers.setValues(\n                    {\n                      ileotw: \"\",\n                      ilezamk:\"\",\n                      level:\"\",\n                      skills:\"\",\n\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      ileotw: false,\n\n                      ilezamk:false,\n                      level:false,\n                      skills:false,\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"oldPassword\",\n                    \"Podano nieprawidłowe stare hasło\"\n                  );\n\n                });\n            }, 5000);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Wygeneruj sprawdzian XD</h4>\n              \n            </CardHeader>\n            <CardBody>\n\n            <Field\n                component={MaterialFormikField}\n                name={\"ileotw\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Ilość zadań otwartych\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                     \n                    </InputAdornment>\n                  ),\n                }}\n              />\n            <Field\n                component={MaterialFormikField}\n                name={\"ilezamk\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Ilość zadań zamkniętych\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      \n                    </InputAdornment>\n                  ),\n                }}\n              />\n                          <Field as =\"select\"\n\n                component={MaterialFormikField}\n                name={\"level\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"poziom trudności\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      \n                    </InputAdornment>\n                  ),\n                }}\n              >\n                \n                </Field>\n             \n              \n              \n                          <Field\n                component={MaterialFormikField}\n                name={\"skills\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Umiejętności\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                     \n                    </InputAdornment>\n                  ),\n                }}\n              />         \n                            \n                            <Field\n                component={MaterialFormikField}\n                name={\"groups\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"GRUPY KATOLICKIE JANA PAWŁA 2\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                     \n                    </InputAdornment>\n                  ),\n                }}\n              />   \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n              >\n                Wygeneruj sprawdzian\n              </Button>\n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n                \n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Fenerator;","export default __webpack_public_path__ + \"8ae80ee488d6ec36fd62f67865d06356.png\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;"],"sourceRoot":""}