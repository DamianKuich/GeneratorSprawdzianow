{"version":3,"sources":["webpack:///./djsr/frontend/src/components/LoadingForButtons.js","webpack:///./djsr/frontend/src/components/MaterialUiManageAccount.js","webpack:///./djsr/frontend/src/components/img/genesprDark.png"],"names":["useStyles","makeStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","LoadingScreenB","classes","buttonProgress","styles","MaterialUiManageAccount","props","FRS","user","appState","React","useState","editView","setEditView","useSnackbar","enqueueSnackbar","closeSnackbar","bgStyles","paperContainer","backgroundImage","image","minHeight","examCardContainer","width","backgroundColor","cardTitle","textAlign","cardAnimaton","setCardAnimation","setTimeout","rest","container","email","Yup","shape","required","values","helpers","setSubmitting","axiosInstance","put","then","response","variant","error","errResponse","setValues","setTouched","name","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","console","log","cardHeader","e","MaterialFormikField","fullWidth","endAdornment","inputIconsColor","cardFooter","min","max","username","setStatus","password","passwordConfirm","oldPassword","oneOf","oldpassword","type"],"mappings":"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","file":"14.main.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n\n  }));\n\nexport default function LoadingScreenB() {\n      const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <div className={classes.wrapper}>\n\n            <CircularProgress mt={5} size={20} className={classes.buttonProgress} style={{\n                'color': 'purple',\n\n            }}/>\n\n        </div>\n    </div>\n\n      \n   \n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Paper from '@material-ui/core/Paper';\nimport Header from \"./material_ui_components/Header/Header.js\";\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\nimport Card from \"./material_ui_components/Card/Card.js\";\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\nimport Grid from '@material-ui/core/Grid';\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\nimport { useSnackbar } from 'notistack';\nimport image from \"./img/genesprDark.png\";\nimport * as Yup from \"yup\";\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\nimport { Formik, Field } from \"formik\";\nimport MaterialFormikField from \"./MaterialFormikField\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport LoadingScreenB from \"./LoadingForButtons\"\nconst useStyles = makeStyles(styles);\n\nconst MaterialUiManageAccount = (props) => {\n\n  const FRS = \"Pole wymagane\";\n  const user = props.appState.user;\n  const [editView, setEditView] = React.useState(\"email\");\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  \nconst bgStyles = {\n  paperContainer: {\n      backgroundImage: `url(${image})`,\n      \n      minHeight: 1000,\n\n     \n     \n\n\n     \n  },\n  examCardContainer: {\n    width: 700,\n    backgroundColor: '#FEFEFA',\n\n    \n},\n\n  cardTitle: {\n    textAlign:'center'\n  }\n\n};\n\n\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const { ...rest } = props;\n  return (\n    <div>\n      <Paper\n       style={bgStyles.paperContainer}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n              {editView==\"email\" ? (\n        \n        <Formik\n        initialValues={{\n          email: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n          .email(\"Nieprawidłowy adres e-mail\")\n          .required(\"Pole wymagane\"),\n        })}\n        onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              \n              helpers.setSubmitting(true);\n              axiosInstance\n                .put(\"/user/update/\", {\n                  email: values.email,\n                })\n                .then((response) => {\n                  \n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \n                    variant: 'success',\n                });\n                helpers.setSubmitting(false);\n\n              \n                })\n                .catch((error) => {\n                  // console.log(\"login error\", error.response);\n                  const errResponse = error.response;\n                  enqueueSnackbar(\"Adres e-mail jest już zajęty, bądź jest nieprawidłowy\", { \n                    variant: 'error',\n                });\n                  helpers.setSubmitting(false);\n                 \n                  helpers.setValues(\n                    {\n                      email: \"\",\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      name: false,\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"name\",\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\n                  );\n                });\n            }, 400);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            \n            <Grid container justify=\"center\">\n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n            </Grid>\n              \n\n                <Field\n                component={MaterialFormikField}\n                name={\"email\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Adres e-mail\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <People className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n         \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n                disabled= {isSubmitting}\n              >\n                Zmień dane\n              </Button>\n              {\n                            isSubmitting &&  \n                           <LoadingScreenB></LoadingScreenB>\n                      \n                          }              \n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n        \n         {editView==\"name\" ? (\n        \n        <Formik\n        initialValues={{\n          name: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string()\n            .min(2, \"Nazwa użytkownika musi się składać z minimum 2 znaków!\")\n            .max(50, \"Hasło może zawierać maksymalnie 50 znaków!\")\n            .required(FRS),\n        })}\n        onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              \n              helpers.setSubmitting(true);\n              axiosInstance\n                .put(\"/user/update/\", {\n                  username: values.name,\n                })\n                .then((response) => {\n                  \n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \n                    variant: 'success',\n                });\n                  helpers.setStatus(\"Pomyslnie zmieniono dane\");\n                  helpers.setSubmitting(false);\n\n                })\n                .catch((error) => {\n                  // console.log(\"login error\", error.response);\n                  const errResponse = error.response;\n                  enqueueSnackbar(\"Nazwa użytkownika jest już zajęta\", { \n                    variant: 'error',\n                });\n                  helpers.setSubmitting(false);\n                  \n                  helpers.setValues(\n                    {\n                      name: \"\",\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      name: false,\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"name\",\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\n                  );\n                });\n            }, 400);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            \n            <Grid container justify=\"center\">\n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n            </Grid>\n              \n\n                <Field\n                component={MaterialFormikField}\n                name={\"name\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Nazwa użytkownika\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <People className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n         \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n                disabled= {isSubmitting}\n              >\n                Zmień dane\n              </Button>\n              {\n                            isSubmitting &&  \n                           <LoadingScreenB></LoadingScreenB>\n                      \n                          } \n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n\n{editView==\"password\" ? (\n        \n        <Formik\n        initialValues={{\n            password: \"\",\n            passwordConfirm: \"\",\n            oldPassword: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n            password: Yup.string()\n              .min(8, \"Hasło musi zawierać co najmniej 8 znaków!\")\n              .max(50, \"Hasło może zawierać maksymalnie 50 znaków!\")\n              .required(\"Pole wymagane\")\n              .oneOf(\n                [Yup.ref(\"passwordConfirm\")],\n                \"Hasła są różne\"\n              ),\n            oldPassword: Yup.string()\n              .min(8, \"Hasło musi zawierać co najmniej 8 znaków!\")\n              .max(50, \"Hasło może zawierać maksymalnie 50 znaków!\")\n              .required(\"Pole wymagane\"),\n            passwordConfirm: Yup.string()\n              .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\n              .required(\"Pole wymagane\"),\n          })}\n          onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              helpers.setSubmitting(true);\n              axiosInstance\n                .put(\"/user/update/\", {\n                  password: values.password,\n                  oldpassword: values.oldPassword,\n                })\n                .then((response) => {\n\n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \n                    variant: 'success',\n                });\n                  helpers.setStatus(\"Pomyslnie zmieniono hasło\");\n                  helpers.setSubmitting(false);\n                 \n                })\n                .catch((error) => {\n                  enqueueSnackbar(\"Nie udało się zmienić hasła, spróbuj ponownie\", { \n                    variant: 'error',\n                });\n                  helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\n                  console.log(\"chngpass error\", error.response);\n                  const errResponse = error.response;\n                  helpers.setSubmitting(false);\n                \n                  helpers.setValues(\n                    {\n                      password: \"\",\n                      oldPassword: \"\",\n                      passwordConfirm:\"\"\n\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      password: false,\n                      oldPassword: false,\n                      passwordConfirm:false\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"oldPassword\",\n                    \"Podano nieprawidłowe stare hasło\"\n                  );\n\n                });\n            }, 400);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            <Grid container justify=\"center\">\n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n            </Grid>\n\n            \n            <Field\n                component={MaterialFormikField}\n                name={\"password\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            <Field\n                component={MaterialFormikField}\n                name={\"passwordConfirm\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Powtórz hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            <Field\n                component={MaterialFormikField}\n                name={\"oldPassword\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Podaj stare hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n\n              \n              \n            \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n                disabled= {isSubmitting}\n              >\n                Zmień dane\n              </Button>\n              {\n                            isSubmitting &&  \n                           <LoadingScreenB></LoadingScreenB>\n                      \n                          } \n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n                \n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default MaterialUiManageAccount;\n","export default __webpack_public_path__ + \"29a2f630b088eabfaa8f98afec0658ab.png\";"],"sourceRoot":""}