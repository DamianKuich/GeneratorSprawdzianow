{"version":3,"sources":["webpack:///./djsr/frontend/src/components/MaterialUiManageAccount.js","webpack:///./djsr/frontend/src/components/img/genesprDark.png"],"names":["useStyles","makeStyles","styles","MaterialUiManageAccount","props","FRS","user","appState","React","useState","editView","setEditView","bgStyles","paperContainer","backgroundImage","image","minHeight","examCardContainer","width","backgroundColor","cardTitle","textAlign","cardAnimaton","setCardAnimation","setTimeout","classes","rest","container","name","email","password","passwordConfirm","Yup","shape","min","max","required","oneOf","values","helpers","setSubmitting","axiosInstanceNoAuth","put","username","then","response","setState","token","data","confirmation_token","history","push","error","errResponse","setValues","setTouched","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","console","log","cardHeader","e","MaterialFormikField","fullWidth","endAdornment","inputIconsColor","cardFooter","axiosInstance","setUser","setStatus","locked","oldPassword","oldpassword","type"],"mappings":"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","file":"17.main.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Paper from '@material-ui/core/Paper';\nimport Header from \"./material_ui_components/Header/Header.js\";\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\nimport Card from \"./material_ui_components/Card/Card.js\";\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\n\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\n\nimport image from \"./img/genesprDark.png\";\nimport * as Yup from \"yup\";\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\nimport { Formik, Field } from \"formik\";\nimport MaterialFormikField from \"./MaterialFormikField\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles(styles);\n\nconst MaterialUiManageAccount = (props) => {\n  const FRS = \"Pole wymagane\";\n  const user = props.appState.user;\n  const [editView, setEditView] = React.useState(\"email\");\n  \nconst bgStyles = {\n  paperContainer: {\n      backgroundImage: `url(${image})`,\n      \n      minHeight: 1000,\n\n     \n     \n\n\n     \n  },\n  examCardContainer: {\n    width: 700,\n    backgroundColor: '#FEFEFA',\n\n    \n},\n\n  cardTitle: {\n    textAlign:'center'\n  }\n\n};\n\n\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const { ...rest } = props;\n  return (\n    <div>\n      <Paper\n       style={bgStyles.paperContainer}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n              {editView==\"email\" ? (\n        \n        <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string()\n            .min(2, \"Too Short!\")\n            .max(50, \"Too Long!\")\n            .required(FRS),\n          password: Yup.string()\n            .min(8, \"Too Short!\")\n            .max(50, \"Too Long!\")\n            .required(FRS),\n          passwordConfirm: Yup.string()\n            .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\n            .required(FRS),\n          email: Yup.string()\n            .email(\"Nieprawidłowy adres e-mail\")\n            .required(FRS),\n        })}\n        onSubmit={(values, helpers) => {\n          setTimeout(() => {\n            helpers.setSubmitting(true);\n            axiosInstanceNoAuth\n            .put(\"/user/update/\", {\n                username: values.name,\n                password: values.password,\n                email: values.email,\n              })\n              .then((response) => {\n                helpers.setSubmitting(false);\n                this.setState({\n                  token: response.data.confirmation_token,\n                });\n                this.props.history.push(\n                  `/signupsuccess/${response.data.confirmation_token}`\n                );\n              })\n              .catch((error) => {\n                // console.log(\"login error\", error.response);\n                const errResponse = error.response;\n                helpers.setSubmitting(false);\n                helpers.setValues(\n                  {\n                    name: \"\",\n                    password: \"\",\n                    passwordConfirm: \"\",\n                    email: \"\",\n                  },\n                  false\n                );\n                helpers.setTouched(\n                  {\n                    name: false,\n                    password: false,\n                    email: false,\n                    passwordConfirm: false,\n                  },\n                  false\n                );\n                helpers.setFieldError(\n                  \"general\",\n                  \"Nierpawidłowa nazwa użytkownika lub hasło\"\n                );\n              });\n          }, 5000);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            \n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n\n\n\n                <Field\n                component={MaterialFormikField}\n                name={\"email\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"E-mail\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <People className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n         \n            \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n              >\n                Zmień dane\n              </Button>\n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n         {editView==\"name\" ? (\n        \n        <Formik\n        initialValues={{\n          name: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string()\n            .min(2, \"Too Short!\")\n            .max(50, \"Too Long!\")\n            .required(FRS),\n        })}\n        onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              \n              helpers.setSubmitting(true);\n              axiosInstance\n                .put(\"/user/update/\", {\n                  username: values.name,\n                })\n                .then((response) => {\n                  this.props.setUser(response.data);\n                  helpers.setStatus(\"Pomyslnie zmieniono dane\");\n                  helpers.setSubmitting(false);\n                  this.setState({ locked: false });\n                })\n                .catch((error) => {\n                  // console.log(\"login error\", error.response);\n                  const errResponse = error.response;\n                  helpers.setSubmitting(false);\n                  this.setState({ locked: false });\n                  helpers.setValues(\n                    {\n                      name: \"\",\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      name: false,\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"name\",\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\n                  );\n                });\n            }, 400);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            \n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n              \n\n                <Field\n                component={MaterialFormikField}\n                name={\"name\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Nazwa użytkownika\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <People className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n         \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n              >\n                Zmień dane\n              </Button>\n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n\n{editView==\"password\" ? (\n        \n        <Formik\n        initialValues={{\n            password: \"\",\n            passwordConfirm: \"\",\n            oldPassword: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n            password: Yup.string()\n              .min(8, \"Too Short!\")\n              .max(50, \"Too Long!\")\n              .required(\"Pole wymagane\")\n              .oneOf(\n                [Yup.ref(\"passwordConfirm\")],\n                \"Hasła są różne\"\n              ),\n            oldPassword: Yup.string()\n              .min(8, \"Too Short!\")\n              .max(50, \"Too Long!\")\n              .required(\"Pole wymagane\"),\n            passwordConfirm: Yup.string()\n              .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\n              .required(\"Pole wymagane\"),\n          })}\n          onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              helpers.setSubmitting(true);\n              axiosInstance\n                .put(\"/user/update/\", {\n                  password: values.password,\n                  oldpassword: values.oldPassword,\n                })\n                .then((response) => {\n                  this.props.setUser(response.data);\n                  helpers.setStatus(\"Pomyslnie zmieniono hasło\");\n                  helpers.setSubmitting(false);\n                  this.setState({ locked: false });\n                })\n                .catch((error) => {\n                  helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\n                  console.log(\"chngpass error\", error.response);\n                  const errResponse = error.response;\n                  helpers.setSubmitting(false);\n                  this.setState({ locked: false });\n                  helpers.setValues(\n                    {\n                      password: \"\",\n                      oldPassword: \"\",\n                      passwordConfirm:\"\"\n\n                    },\n                    false\n                  );\n                  helpers.setTouched(\n                    {\n                      password: false,\n                      oldPassword: false,\n                      passwordConfirm:false\n                    },\n                    false\n                  );\n                  helpers.setFieldError(\n                    \"oldPassword\",\n                    \"Podano nieprawidłowe stare hasło\"\n                  );\n\n                });\n            }, 400);\n          }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form className={classes.form}>\n            {console.log(touched, errors)}\n            <CardHeader\n              color=\"primary\"\n              className={classes.cardHeader}\n            >\n              <h4>Edytuj dane</h4>\n              \n            </CardHeader>\n            <CardBody>\n            <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\n                   Zmień e-mail\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\n                   Zmień nazwę użytkownika\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\n                   Zmień hasło\n              </Button>\n            </ButtonGroup>\n\n            \n            <Field\n                component={MaterialFormikField}\n                name={\"password\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            <Field\n                component={MaterialFormikField}\n                name={\"passwordConfirm\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Powtórz hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            <Field\n                component={MaterialFormikField}\n                name={\"oldPassword\"}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                labelText=\"Podaj stare hasło\"\n                inputProps={{\n                  type: \"password\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LockIcon className={classes.inputIconsColor} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n\n              \n              \n            \n            </CardBody>\n            <CardFooter className={classes.cardFooter}>\n              <Button\n                simple\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  handleSubmit();\n                }}\n              >\n                Zmień dane\n              </Button>\n            </CardFooter>\n          </form>\n        )}\n      </Formik>\n \n        ) : (\n          <>\n          </>\n        )}\n                \n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default MaterialUiManageAccount;\n","export default __webpack_public_path__ + \"29a2f630b088eabfaa8f98afec0658ab.png\";"],"sourceRoot":""}