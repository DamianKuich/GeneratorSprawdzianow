{"version":3,"sources":["webpack:///./djsr/frontend/src/components/ExamEditor.js","webpack:///./djsr/frontend/src/components/ExamPDF.js","webpack:///./djsr/frontend/src/components/FormikMDInput.js","webpack:///./djsr/frontend/src/components/TaskEditor.js","webpack:///./djsr/frontend/src/components/assets sync ^\\.\\/.*$","webpack:///./djsr/frontend/src/components/assets/fonts/Roboto-Italic.ttf","webpack:///./djsr/frontend/src/components/assets/fonts/Roboto-Medium.ttf","webpack:///./djsr/frontend/src/components/assets/fonts/Roboto-MediumItalic.ttf","webpack:///./djsr/frontend/src/components/assets/fonts/Roboto-Regular.ttf","webpack:///./djsr/frontend/src/components/assets/images/bee.png","webpack:///./djsr/frontend/src/components/registered-files.js","webpack:///./djsr/frontend/src/components/styles/katex.css?27b1","webpack:///./djsr/frontend/src/components/taskSearch.js","webpack:///./node_modules/pdfkit/js/data sync nonrecursive Helvetica.*\\.afm$","webpack:///util (ignored)","webpack:///util (ignored)?4ea9","webpack:///./streams (ignored)","webpack:///./extend-node (ignored)"],"names":["ExamEditor","props","id","newID","clearTimeout","match","params","axiosInstance","get","then","response","console","log","setState","state","exam","data","tasks","length","JSON","parse","examToPdf","index","editorTask","sideMenuCollapseId","task","Object","assign","timeout","resetTimeout","setTimeout","saveExam","saved","put","stringify","splice","result","source","destination","draggableId","droppableId","draggedItem","currentDataSet","dataset","currentDataSetAnswers","answers","allanswers","replace","correctans","correctAnswersIndex","Math","floor","random","incorrectAnswersIndexes","map","item","answersSet","concat","sampleSize","isCorrect","shuffle","examAnswers","maxPoints","collapseId","getExam","searchedTasks","examTasks","dragEnd","name","setSideMenuCollapse","generatedPDFV3","setSearchedTasks","Array","isArray","provided","snapshot","innerRef","backgroundColor","isDraggingOver","draggableProps","dragHandleProps","style","text","placeholder","updateTaskToEdit","marginLeft","marginRight","width","height","answerSource","ansChar","setTaskToEdit","removeTask","image","maxHeight","Component","texToSvg","latex","onEnd","axiosInstanceNoAuth","post","r","join","drawCircle","doc","x","y","circle","stroke","moveCursorIfNeeded","crs","distance","maxX","downDistance","getSvgSize","svg","parsedSvg","XmlParser","parseFromString","addCursor","pos1","pos2","moveCursorRight","getCursorPos","parseTaskText","re","taskTextParsed","taskTextParsedIndex","exec","push","type","substring","slice","toPush","parseTask","parsedText","Promise","all","answer","parsedAnswers","parseTasks","parseExamData","parsedTasks","pageSize","Y","PDFDocument","stream","pipe","blobStream","myCursor","fillColor","newCursPos","parseInt","widthOfString","continued","part","toPrint","String","textSize","heightOfString","svgSize","SVGtoPDF","end","on","blob","toBlob","saveAs","FormikMdInput","touched","value","errors","icon","onChange","onBlur","label","hideInput","disableAutocomplete","disabled","prepend","useState","active","setActive","e","TaskEditor","values","helpers","imageToUpload","formData","FormData","append","headers","updateTask","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","setFieldValue","handleChangeAndSubmit","currentTarget","files","propTypes","registerBinaryFiles","ctx","keys","forEach","key","fs","writeFileSync","registerAFMFonts","require","CourierBold","TaskSearch","sections","results","error","skills","setSubmitting","skill","updateData","errResponse","section","toggleCollapse","Section","Skill"],"mappings":"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","file":"3.main.js","sourcesContent":["import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { MDBCol, MDBCollapse, MDBContainer, MDBRow } from \"mdbreact\";\nimport TaskSearch from \"./taskSearch\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TaskEditor from \"./TaskEditor\";\n// import {\n//   PDFDownloadLink,\n//   Document,\n//   Page,\n//   Text,\n//   StyleSheet,\n//   View,\n//   Font,\n//   Image,\n//   Svg,\n//   Path,\n//   G,\n// } from \"@react-pdf/renderer\";\nimport { sampleSize, shuffle } from \"lodash/collection\";\n// import Roboto from \"./webfonts/Roboto-Regular.ttf\";\n// import RobotoBold from \"./webfonts/Roboto-Bold.ttf\";\nimport Latex from \"react-latex\";\nimport \"./styles/katex.css\";\nimport \"./registered-files\";\nimport examToPdf from \"./ExamPDF\";\nimport axiosInstance from \"./axiosAPI\";\n\nclass ExamEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exam: null,\n      //     {\n      //   tasks: [],\n      // }\n      tasks: null,\n      sideMenuCollapseId: \"\",\n      editorTask: null,\n      timeout: null,\n      saved: true,\n    };\n  }\n\n  resetTimeout = (id, newID) => {\n    clearTimeout(id);\n    return newID;\n  };\n  getExam = () => {\n    const id = this.props.match.params.id;\n    axiosInstance.get(`/user/onetest/${id}`).then((response) => {\n      console.log(response);\n      this.setState((state) => {\n        state.exam = response.data[0];\n        if (state.exam.tasks.length > 0) {\n          state.exam.tasks = JSON.parse(state.exam.tasks);\n        } else {\n          state.exam.tasks = [];\n        }\n        return state;\n      });\n    });\n  };\n  componentDidMount() {\n    this.getExam();\n  }\n\n  generatedPDFV3 = examToPdf;\n\n  setTaskToEdit = (index) => {\n    this.setState((state) => {\n      state.editorTask = state.exam.tasks[index];\n      state.sideMenuCollapseId = \"taskEdit\";\n      return state;\n    });\n  };\n\n  updateTaskToEdit = (task) => {\n    this.setState((state) => {\n      Object.assign(state.editorTask, task);\n      state.timeout = this.resetTimeout(\n        this.state.timeout,\n        setTimeout(this.saveExam, 3000)\n      );\n      state.saved = false;\n      return state;\n    });\n  };\n\n  saveExam = () => {\n    axiosInstance\n      .put(\"/user/maketest/\", {\n        id: this.state.exam.id,\n        tasks: JSON.stringify(this.state.exam.tasks),\n      })\n      .then((response) => {\n        this.setState({ saved: true });\n      });\n  };\n\n  removeTask = (index) => {\n    this.setState((state) => {\n      state.exam.tasks.splice(index, index);\n      state.timeout = this.resetTimeout(\n        this.state.timeout,\n        setTimeout(this.saveExam, 3000)\n      );\n      state.saved = false;\n      return state;\n    });\n  };\n\n  dragEnd = (result) => {\n    const { source, destination, draggableId } = result;\n    console.log(source, destination, draggableId);\n    if (source.droppableId === \"examDroppable\" && !destination.droppableId) {\n      this.setState((state) => {\n        state.exam.tasks = state.exam.tasks.splice(source.index, source.index);\n        return state;\n      });\n    }\n    console.log(\"dragEnd\", result);\n    if (!destination || destination.droppableId === \"searchDroppable\") {\n      return;\n    }\n    if (\n      source.droppableId === \"examDroppable\" &&\n      destination.droppableId === \"examDroppable\"\n    ) {\n      this.setState((state) => {\n        let tasks = state.exam.tasks;\n        [tasks[source.index], tasks[destination.index]] = [\n          tasks[destination.index],\n          tasks[source.index],\n        ];\n        state.saved = false;\n        state.timeout = this.resetTimeout(\n          this.state.timeout,\n          setTimeout(this.saveExam, 3000)\n        );\n        return state;\n      });\n    } else {\n      let draggedItem = JSON.parse(\n        JSON.stringify(this.state.tasks[source.index])\n      );\n      draggedItem.currentDataSet = draggedItem.dataset[0];\n      let currentDataSetAnswers = draggedItem.currentDataSet.answers[0];\n      console.log(\"XD?\", currentDataSetAnswers.allanswers.replace(/'/g, '\"'));\n      currentDataSetAnswers.allanswers = JSON.parse(\n        currentDataSetAnswers.allanswers.replace(/'/g, '\"')\n      );\n      currentDataSetAnswers.correctans = JSON.parse(\n        currentDataSetAnswers.correctans.replace(/'/g, '\"')\n      );\n\n      console.log(currentDataSetAnswers, \"currentDataSetAnswers\");\n\n      let correctAnswersIndex = [\n        Math.floor(\n          Math.random() * (currentDataSetAnswers.correctans.length - 1)\n        ),\n      ];\n      console.log(\n        correctAnswersIndex,\n        \"correctAnswersIndex\",\n        currentDataSetAnswers.length\n      );\n      let incorrectAnswersIndexes = currentDataSetAnswers.allanswers.map(\n        (item, index) => {\n          return index;\n        }\n      );\n      let answersSet = [];\n\n      // [sampleSize(currentDataSetAnswers.allanswers,3).map];\n      answersSet = answersSet.concat(\n        sampleSize(correctAnswersIndex).map((item) => {\n          return { index: item, isCorrect: true };\n        })\n      );\n      answersSet = answersSet.concat(\n        sampleSize(incorrectAnswersIndexes, 3).map((item) => {\n          return { index: item, isCorrect: false };\n        })\n      );\n      answersSet = shuffle(answersSet);\n\n      draggedItem.currentDataSet.examAnswers = answersSet;\n      draggedItem.maxPoints = 1;\n      console.log(\"draggedItem\", draggedItem, this.state.tasks);\n      this.setState((state) => {\n        state.exam.tasks.splice(destination.index, 0, draggedItem);\n        state.saved = false;\n        state.timeout = this.resetTimeout(\n          this.state.timeout,\n          setTimeout(this.saveExam, 3000)\n        );\n        return state;\n      });\n    }\n  };\n  setSearchedTasks = (tasks) => {\n    this.setState((state) => {\n      state.tasks = tasks;\n      return state;\n    });\n  };\n\n  setSideMenuCollapse = (collapseId) => {\n    this.setState({ sideMenuCollapseId: collapseId });\n  };\n  render() {\n    let exam = this.state.exam;\n    if (!exam) {\n      return (\n        <MDBContainer>\n          <div>Ladowanie</div>\n        </MDBContainer>\n      );\n    }\n    let sideMenuCollapseId = this.state.sideMenuCollapseId;\n    let searchedTasks = this.state.tasks;\n    let examTasks = this.state.exam.tasks;\n    let editorTask = this.state.editorTask;\n    console.log(\"editorTask\", editorTask);\n    return (\n      <DragDropContext onDragEnd={this.dragEnd}>\n        <MDBRow>\n          <MDBCol size=\"4\" className=\"border-right\">\n            <div className=\"w-100 h2-responsive text-center\">{exam.name}</div>\n            <div className=\"w-100 text-right\">{(this.state.saved)? \"Zapisano\" : \"Zapisywanie\"}</div>\n            <MDBRow>\n              <MDBCol\n                className={\n                  \"d-flex justify-content-between \" +\n                  \"p-2 mt-3 border-right border-top border-left \" +\n                  (sideMenuCollapseId === \"taskSearch\" ? \"\" : \"border-bottom\")\n                }\n                onClick={() => {\n                  this.setSideMenuCollapse(\"taskSearch\");\n                }}\n              >\n                Dodaj zadanie\n              </MDBCol>\n              <MDBCol\n                size={\"3\"}\n                className={\n                  \"d-flex justify-content-between \" +\n                  \"p-2 mt-3 border-right border-top border-left \" +\n                  (sideMenuCollapseId === \"taskEdit\" ? \"\" : \"border-bottom\")\n                }\n                onClick={() => {\n                  this.setSideMenuCollapse(\"taskEdit\");\n                }}\n              >\n                Edycja zadania\n              </MDBCol>\n              <MDBCol\n                size={\"3\"}\n                className={\n                  \"d-flex justify-content-between \" +\n                  \"p-2 mt-3 border-right border-top border-left border-bottom\"\n                }\n              >\n                <div\n                  onClick={() => {\n                    this.generatedPDFV3(this.state.exam);\n                  }}\n                >\n                  Pobierz PDF\n                </div>\n              </MDBCol>\n            </MDBRow>\n            <MDBCollapse\n              id=\"taskSearch\"\n              isOpen={sideMenuCollapseId}\n              className=\"w-100\"\n            >\n              <TaskSearch updateData={this.setSearchedTasks} />\n              <MDBContainer className=\"mt-3\">\n                {/*{Array.isArray(searchedTasks) &&*/}\n                {/*  searchedTasks.length > 0 &&*/}\n                {/*  searchedTasks.map((task) => <div>{task.text}</div>)}*/}\n                {Array.isArray(searchedTasks) && searchedTasks.length > 0 && (\n                  <Droppable droppableId=\"searchDroppable\">\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        style={{\n                          backgroundColor: snapshot.isDraggingOver\n                            ? \"red\"\n                            : \"white\",\n                        }}\n                        className=\"border-top\"\n                      >\n                        {searchedTasks.map((task, index) => (\n                          <Draggable\n                            key={\"task-\" + task.id}\n                            draggableId={\"\" + task.id}\n                            index={index}\n                          >\n                            {(provided, snapshot) => (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={provided.draggableProps.style}\n                                className=\"border-right border-left border-bottom p-2\"\n                              >\n                                <Latex>{task.text}</Latex>\n                              </div>\n                            )}\n                          </Draggable>\n                        ))}\n                        {provided.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                )}\n                {Array.isArray(searchedTasks) && searchedTasks.length === 0 && (\n                  <div>Brak zadań o podanych kryteriach</div>\n                )}\n                {!searchedTasks && (\n                  <div className=\"text-truncate\">\n                    Wybierz umiejetnosci z listy. Aby dodać zadania do\n                    sprawdzianu przeciągnij je na sprawdzian\n                  </div>\n                )}\n              </MDBContainer>\n            </MDBCollapse>\n            <MDBCollapse\n              id=\"taskEdit\"\n              isOpen={sideMenuCollapseId}\n              className=\"w-100\"\n            >\n              <TaskEditor\n                task={editorTask}\n                updateTask={this.updateTaskToEdit}\n              />\n            </MDBCollapse>\n          </MDBCol>\n          <MDBCol size=\"8\" className=\"d-flex justify-content-center\">\n            <Droppable\n              droppableId=\"examDroppable\"\n              style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\n            >\n              {(provided, snapshot) => (\n                <div\n                  style={{\n                    width: \"21cm\",\n                    height: \"29.7cm\",\n                    backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"white\",\n                  }}\n                  className=\"border p-3\"\n                  ref={provided.innerRef}\n                >\n                  <div className=\"mb-2\">\n                    Imie i nazwisko:\n                    .................................................................\n                  </div>\n                  {examTasks.map((task, index) => (\n                    <Draggable\n                      key={\"task-\" + task.id + \"-\" + index}\n                      draggableId={\"task-\" + task.id + \"-\" + index}\n                      index={index}\n                    >\n                      {(provided, snapshot) => {\n                        console.log(\"ELO123\", task.currentDataSet);\n                        let answers = task.currentDataSet.examAnswers.map(\n                          (item) => {\n                            let answerSource = item.isCorrect\n                              ? task.currentDataSet.answers[0].correctans\n                              : task.currentDataSet.answers[0].allanswers;\n                            return answerSource[item.index];\n                          }\n                        );\n\n                        const ansChar = [\"A\", \"B\", \"C\", \"D\"];\n                        return (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={provided.draggableProps.style}\n                            className=\"p-2\"\n                            onClick={() => {\n                              this.setTaskToEdit(index);\n                            }}\n                            // onContextMenu={() => {\n                            //   this.removeTask(index);\n                            // }}\n                            onContextMenuCapture={() => {\n                              this.removeTask(index);\n                            }}\n                          >\n                            <div className=\"text-danger\" onClick={() => {\n                              this.removeTask(index);\n                            }}>X</div>\n                            <p className=\"text-right mb-0 pb-0\">\n                              {\".../\" + task.maxPoints + \" pkt.\"}\n                            </p>\n                            <p>\n                              <span className=\"font-weight-bold\">\n                                {index + 1}\n                                {\". \"}\n                              </span>\n                              <Latex>{task.text}</Latex>\n                            </p>\n                            {task.currentDataSet.image.length >= 1 && (\n                              <MDBRow center>\n                                <div>\n                                  <img\n                                    src={\n                                      \"http://127.0.0.1:8000/api/user/image/\" +\n                                      task.currentDataSet.image[0]\n                                    }\n                                    style={{ maxHeight: \"100px\" }}\n                                  />\n                                </div>\n                              </MDBRow>\n                            )}\n                            <MDBRow between className=\"pl-2 pr-2 ml-0 mr-2\">\n                              {answers.map((item, index) => {\n                                return (\n                                  <div>\n                                    <span className=\"font-weight-bold\">\n                                      {ansChar[index] + \". \"}\n                                    </span>\n                                    <Latex>{item}</Latex>\n                                  </div>\n                                );\n                              })}\n                            </MDBRow>\n                          </div>\n                        );\n                      }}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </MDBCol>\n        </MDBRow>\n      </DragDropContext>\n    );\n  }\n}\n\n// ExamEditor.propTypes = {};\n\nexport default ExamEditor;\n","import \"./registered-files\"\nimport PDFDocument from \"pdfkit\";\nimport blobStream from \"blob-stream\";\n// import texToSvg from \"./TexToSvg\";\nimport SVGtoPDF from \"svg-to-pdfkit\";\nimport XmlParser from \"react-xml-parser\";\nimport {axiosInstanceNoAuth} from \"./axiosAPI\";\nimport { saveAs } from 'file-saver';\n// const splitLines = (parsedText, doc, width) => {};\n// const printPartWithBreak = (part, doc) => {};\n// const getStringSize = (text, doc) => {};\nimport \"@babel/polyfill\";\nconst texToSvg= async (latex, onEnd) => {\n  let r = await axiosInstanceNoAuth.post(`/latex/svg/`, {\n    latex: latex,\n  });\n  let data = r.data;\n  return data.join(\"\");\n};\nconst drawCircle = (doc, x, y) => {\n  doc.circle(x, y, 3);\n  doc.stroke();\n};\nconst moveCursorIfNeeded = (crs,distance,maxX = 595 - 72, downDistance = 35)=>{\n  if (crs.x+distance<=maxX){\n    return {\n      x:crs.x,\n      y:crs.y,\n    }\n  }\n  return {\n    x:72,\n    y:crs.y+downDistance\n  }\n}\nconst getSvgSize = (svg) => {\n  let parsedSvg = new XmlParser().parseFromString(svg);\n  console.log(\"parsedSvg\", parsedSvg);\n  return { x: 100, y: 20 };\n};\nconst addCursor = (pos1, pos2, maxX = 595 - 72) => {\n  return {\n    x: Math.floor(pos1.x + pos2.x),\n    y: Math.floor(pos1.y + pos2.y),\n  };\n  // return {x:10,y:10}\n};\nconst moveCursorRight = (crs, distance, maxX = 595 - 72, downDistance = 35) => {\n  console.log(\"distance\", distance);\n  if (crs.x + distance <= maxX) {\n    return { x: crs.x + distance, y: crs.y };\n  } else return { x: 72, y: crs.y + 20 };\n};\nconst getCursorPos = (doc) => {\n  return { x: doc.x, y: doc.y };\n};\nconst parseTaskText = async (text) => {\n  const re = /\\$\\{[^\\$]*\\}\\$/g;\n  let match = null;\n  let taskTextParsed = [];\n  let taskTextParsedIndex = 0;\n  while ((match = re.exec(text)) != null) {\n    // console.log(match);\n    if (taskTextParsedIndex < match.index) {\n      taskTextParsed.push({\n        type: \"text\",\n        text: text.substring(taskTextParsedIndex, match.index),\n      });\n    }\n    let toPush = {\n      type: \"Latex\",\n      text: match[0].slice(2, -2),\n      svg: await texToSvg(match[0].slice(2, -2)),\n    };\n    taskTextParsed.push(toPush);\n    taskTextParsedIndex = match.index + match[0].length;\n  }\n  if (taskTextParsedIndex < text.length - 1) {\n    taskTextParsed.push({\n      type: \"text\",\n      text: text.substring(taskTextParsedIndex, text.length),\n    });\n  }\n  return taskTextParsed;\n};\nconst parseTask = async (task) => {\n  task.parsedText = await parseTaskText(task.text);\n  let currentDataSet = task.currentDataSet;\n  console.log(\"currentDataSet\", currentDataSet);\n  let parsedAnswers = await Promise.all(\n    currentDataSet.examAnswers.map(async (answer) => {\n      console.log(\"answer map\", answer);\n      const source = answer.isCorrect\n        ? currentDataSet.answers[0].correctans\n        : currentDataSet.answers[0].allanswers;\n      return await parseTaskText(source[answer.index]);\n    })\n  );\n  task.parsedAnswers = parsedAnswers;\n  return task;\n};\nconst parseTasks = async (tasks) => {\n  tasks = tasks.map((task) => parseTask(task));\n  return await Promise.all(tasks);\n};\nconst parseExamData = async (exam) => {\n  let tasks = exam.tasks;\n  let parsedTasks = await parseTasks(tasks);\n  // console.log(\"pdf tasks\", tasks);\n  // console.log(\"pdf tasksParsed\", parsedTasks);\n  exam.parsedTasks = parsedTasks;\n  return exam;\n};\nexport const examToPdf = async (exam) => {\n  exam = JSON.parse(JSON.stringify(exam));\n  exam = await parseExamData(exam);\n  console.log(\"PDF exam\", exam);\n  const pageSize = { x: 595, Y: 842 };\n  let tasks = exam.parsedTasks;\n  let doc = new PDFDocument();\n  let stream = doc.pipe(blobStream());\n  let myCursor = getCursorPos(doc);\n  doc.fillColor(\"black\");\n  console.log(\"first cursor\");\n   // myCursor = getCursorPos(doc);\n  for (let task in tasks) {\n    let index = task;\n    task = tasks[index];\n    console.log(\"pdf task\", task);\n    let taskTextParsed = task.parsedText;\n\n    drawCircle(doc,myCursor.x,myCursor.y);\n    let newCursPos = {\n      x: parseInt(\n        Math.floor(doc.widthOfString(parseInt(index) + parseInt(1) + \". \"))\n      ),\n      y: 0,\n      // x:0\n    };\n    doc.text(parseInt(index) + parseInt(1) + \". \", myCursor.x, myCursor.y, {\n      continued: true,\n    });\n    myCursor = moveCursorRight(myCursor, newCursPos.x);\n    drawCircle(doc,myCursor.x,myCursor.y);\n    // let position = getCursorPos(doc);\n    for (let part of taskTextParsed) {\n      // console.log(\"part.text\", part.text, taskTextParsed);\n\n      // console.log(\"str x y\", textSize);\n      if (part.type === \"text\") {\n        let toPrint = String(part.text);\n        console.log(\"toPrint\", toPrint, part.text);\n        let textSize = {\n          x: doc.widthOfString(toPrint, {\n            // continued: true,\n            width: pageSize.x - 2 * 72,\n          }),\n          y: doc.heightOfString(toPrint, {\n            // continued: true,\n            width: pageSize.x - 2 * 72,\n          }),\n        };\n        console.log(\"str to print\", myCursor, part.text, part);\n        console.log(\"crs b4\", getCursorPos(doc));\n\n        let crs = getCursorPos(doc);\n        myCursor=moveCursorIfNeeded(myCursor,textSize.x)\n        // doc.text(toPrint, crs.x, crs.y, { continued: true });\n        doc.text(toPrint, myCursor.x, myCursor.y\n            // , { continued: true }\n            );\n        console.log(\"crs after\", getCursorPos(doc));\n        // doc.text(part.text,myCursor.x,myCursor.y);\n        // console.log(\"str to print after\", myCursor);\n        myCursor = moveCursorRight(myCursor, textSize.x);\n        drawCircle(doc,myCursor.x,myCursor.y);\n      }\n      if (part.type === \"Latex\") {\n        let svgSize = getSvgSize(part.svg);\n        myCursor= moveCursorIfNeeded(myCursor,svgSize.x);\n        console.log(\"svg to print\", myCursor, part.text, part);\n        let crs = getCursorPos(doc);\n        SVGtoPDF(doc, part.svg, myCursor.x, myCursor.y);\n        // SVGtoPDF(doc, part.svg, crs.x, crs.y);\n        myCursor = moveCursorRight(myCursor, svgSize.x);\n        drawCircle(doc,myCursor.x,myCursor.y);\n      }\n    }\n    // doc.text(\"\", { continued: false });\n    myCursor.y = myCursor.y + 35;\n    myCursor.x = 72;\n    drawCircle(doc,myCursor.x,myCursor.y);\n    // doc.moveDown(1);\n  }\n  doc.end();\n  stream.on(\"finish\", () => {\n    let blob = stream.toBlob(\"application/pdf\");\n    saveAs(blob, \"MyFile.pdf\");\n  });\n};\n\nexport default examToPdf;\n","import React, { useState } from \"react\";\n\nconst FormikMdInput = ({\n  name,\n  touched,\n  value,\n  errors,\n  icon,\n  onChange,\n  onBlur,\n  label,\n  id,\n  type,\n  hideInput,\n  disableAutocomplete,\n  disabled,\n  prepend,\n}) => {\n  const [active, setActive] = useState(false);\n  //todo repair prepend render\n\n  // console.log(\n  //   \"ninput\",\n  //   name,\n  //   active,\n  //   value === \"\",\n  //   value === null,\n  //   active || !(value == \"\" || value == null),\n  //     \"value\",\n  //     value\n  // );\n  return (\n    <div className=\"md-form form-group\">\n      {!!icon && (\n        <i\n          className={[\n            \"fa\",\n            icon,\n            \"prefix\",\n            touched ? (!errors ? \"text-success\" : \"red-text\") : \"\",\n          ].join(\" \")}\n        />\n      )}\n      {!!prepend && (\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">{prepend}</span>\n        </div>\n      )}\n      <input\n        name={name}\n        onChange={onChange}\n        onBlur={(e) => {\n          onBlur(e);\n          setActive(false);\n        }}\n        onFocus={() => {\n            console.log(\"input focus event\",name)\n          setActive(true);\n        }}\n        value={value}\n        id={id}\n        type={type}\n        autoComplete={disableAutocomplete ? \"off\" : \"on\"}\n        // className=\"form-control is-invalid\"\n        className={[\n          \"form-control\",\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          hideInput ? \"text-password\" : \"\",\n          disabled ? \"disabled\" : \"\",\n        ].join(\" \")}\n        disabled={disabled}\n      />\n      <label\n        htmlFor={id}\n        className={[\n          touched ? (!errors ? \"is-valid\" : \"is-invalid\") : \"\",\n          active || !(value === \"\" || value === null) ? \"active\" : \"\",\n        ].join(\" \")}\n      >\n        {!!label ? label : \"\"}\n      </label>\n      {!!errors && !!touched && (\n        <div className=\"invalid-feedback d-block\">{errors}</div>\n      )}\n    </div>\n  );\n};\n\nexport default FormikMdInput;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {MDBBtn, MDBContainer} from \"mdbreact\";\nimport { Form, Formik } from \"formik\";\nimport FormikMdInput from \"./FormikMDInput\";\nimport axiosInstance from \"./axiosAPI\";\n\nclass TaskEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: null,\n    };\n  }\n\n  setTask = (task) => {};\n\n  // elo = () => {\n  //   let task = JSON.parse(JSON.stringify(this.props.task));\n  //   task.text = task.text + \"1\";\n  //   this.props.updateTask(task);\n  // };\n\n  render() {\n    let task = this.props.task;\n    console.log(\"TE\", task);\n\n    if (!task) return <div>Wybierz zadanie</div>;\n    return (\n      <MDBContainer>\n        <Formik\n          enableReinitialize={true}\n          initialValues={this.props.task}\n          onSubmit={(values, helpers) => {\n            if (!!values.imageToUpload) {\n              let formData = new FormData();\n              formData.append(\"file\", values.imageToUpload);\n              axiosInstance.post(\"/user/addimage/\", formData, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                },\n              }).then((response)=>{\n                  let task = {...values};\n                  task.currentDataSet.image = [response.data.id];\n                  this.props.updateTask({ ...task });\n              });\n            }\n            else this.props.updateTask({ ...values });\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            submitForm,\n            setFieldValue,\n          }) => {\n            let handleChangeAndSubmit = (e) => {\n              handleChange(e);\n              submitForm();\n            };\n            return (\n              <Form>\n                <FormikMdInput\n                  label=\"Treść zadania\"\n                  errors={errors.text}\n                  name=\"text\"\n                  id=\"text\"\n                  touched={touched.text}\n                  onChange={handleChangeAndSubmit}\n                  onBlur={handleBlur}\n                  value={values.text}\n                />\n                <input\n                    type=\"number\"\n                    name=\"maxPoints\"\n                    value={values.maxPoints}\n                    onChange={handleChangeAndSubmit}\n                    onBlur={handleBlur}\n                    min={1}\n                    max={20}\n                />\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroupFileAddon01\"\n                    >\n                      Obrazek do zadania\n                    </span>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      className=\"custom-file-input\"\n                      id=\"inputGroupFile01\"\n                      aria-describedby=\"inputGroupFileAddon01\"\n                      onChange={(e) => {\n                        setFieldValue(\n                          \"imageToUpload\",\n                          e.currentTarget.files[0]\n                        );\n                      }}\n                      onBlur={handleBlur}\n                    />\n                    <label\n                      className=\"custom-file-label\"\n                      htmlFor=\"inputGroupFile01\"\n                    >\n                      Wybierz\n                    </label>\n                  </div>\n                </div>\n                  <MDBBtn onClick={handleSubmit}>Zapisz</MDBBtn>\n              </Form>\n            );\n          }}\n        </Formik>\n        {/*<div onClick={()=>{this.elo()}}>{task.text}</div>*/}\n      </MDBContainer>\n    );\n  }\n}\n\nTaskEditor.propTypes = {};\n\nexport default TaskEditor;\n","var map = {\n\t\"./fonts/Roboto-Italic.ttf\": \"./djsr/frontend/src/components/assets/fonts/Roboto-Italic.ttf\",\n\t\"./fonts/Roboto-Medium.ttf\": \"./djsr/frontend/src/components/assets/fonts/Roboto-Medium.ttf\",\n\t\"./fonts/Roboto-MediumItalic.ttf\": \"./djsr/frontend/src/components/assets/fonts/Roboto-MediumItalic.ttf\",\n\t\"./fonts/Roboto-Regular.ttf\": \"./djsr/frontend/src/components/assets/fonts/Roboto-Regular.ttf\",\n\t\"./images/bee.png\": \"./djsr/frontend/src/components/assets/images/bee.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./djsr/frontend/src/components/assets sync recursive ^\\\\.\\\\/.*$\";","export default __webpack_public_path__ + \"667a1fb223a7a8b2063995c08135fa2d.ttf\";","export default __webpack_public_path__ + \"ea7d3afe129bb3e2ff353ae13db6245e.ttf\";","export default __webpack_public_path__ + \"9d2bc2511675cb157ba53ff5358712bf.ttf\";","export default __webpack_public_path__ + \"71779d80f05ad6beea6ee828c0aef7d9.ttf\";","export default __webpack_public_path__ + \"32f65184f3ce6a4062bad2f08cae0bdf.png\";","import fs from 'fs'\n// use raw-loader explicitly\n// import Courier from '!!raw-loader!pdfkit/js/data/Courier.afm'\n// use raw-loader implicitly (webpack is configured to load *.afm files using raw loader)\nimport CourierBold from 'pdfkit/js/data/Courier-Bold.afm'\n\nfunction registerBinaryFiles(ctx) {\n  ctx.keys().forEach(key => {\n    // extracts \"./\" from beginning of the key\n    fs.writeFileSync(key.substring(2), ctx(key))\n  });\n}\n\nfunction registerAFMFonts(ctx) {\n  ctx.keys().forEach(key => {\n    const match = key.match(/([^/]*\\.afm$)/)\n    if (match) {\n      // afm files must be stored on data path\n      fs.writeFileSync(`data/${match[0]}`, ctx(key).default)\n    }\n  });\n}\n\n// register all files found in assets folder (relative to src)\nregisterBinaryFiles(require.context('./assets', true))\n\n// register AFM fonts distributed with pdfkit\n// is good practice to register only required fonts to avoid the bundle size increase\nregisterAFMFonts(require.context('pdfkit/js/data', false, /Helvetica.*\\.afm$/))\n\n// register files imported directly\n// fs.writeFileSync('data/Courier.afm', Courier)\nfs.writeFileSync('data/Courier-Bold.afm', CourierBold)","// extracted by mini-css-extract-plugin","import React, { Component } from \"react\";\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\nimport { MDBBtn, MDBCollapse, MDBContainer, MDBIcon } from \"mdbreact\";\nimport FormikMdInput from \"./FormikMDInput\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nclass TaskSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sections: null,\n      collapseId: null,\n      results: null,\n    };\n  }\n  componentDidMount() {\n    axiosInstanceNoAuth\n      .get(\"/user/sections/\")\n      .then((response) => {\n        this.setState({ sections: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  toggleCollapse = (id) => {\n    this.setState({ collapseId: id });\n  };\n  compileSections = () => {\n    let sections = this.state.sections;\n  };\n\n  render() {\n    let sections = this.state.sections;\n    let collapseId = this.state.collapseId;\n    let results = this.state.results;\n    console.log(\"sections\", sections);\n    if (!sections) return <div>loading</div>;\n    return (\n      <div className=\"w-100\">\n        <Formik\n          initialValues={{ skills: [] }}\n          onSubmit={(values, helpers) => {\n            setTimeout(() => {\n              // console.log(\"start 1\");\n              helpers.setSubmitting(true);\n              // console.log(\"start 2\");\n              let skills = values.skills;\n              let result = [];\n              for (let key of skills.keys()) {\n                // result.push(key)\n                if (!!skills[key]) {\n                  result.push(key);\n                }\n              }\n              // console.log(\"values\",values);\n              // console.log(\"skillsy\",result.join(\",\"));\n              axiosInstance\n                .post(\"/user/tasks/\", {\n                  skill: result.join(\",\"),\n                })\n                .then((response) => {\n                  helpers.setSubmitting(false);\n                  console.log(\"response\", response);\n                  // this.setState({\n                  //   results: response.data,\n                  // });\n                  this.props.updateData(response.data);\n                })\n                .catch((error) => {\n                  // console.log(\"login error\", error.response);\n                  const errResponse = error.response;\n                  helpers.setSubmitting(false);\n                });\n            }, 200);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <MDBContainer>\n              <MDBContainer className=\"md-accordion mt-5\">\n                <Form onSubmit={handleSubmit}>\n                  {sections.map((section) => {\n                    return (\n                      <>\n                        <div\n                          className={\n                            \"d-flex justify-content-between \" +\n                            \"p-2 mt-3 border-right border-top border-left \" +\n                                 (collapseId === \"section-\" + section.id\n                                ? \"\"\n                                : \"border-bottom\")\n                          }\n                          onClick={() => {\n                            this.toggleCollapse(\"section-\" + section.id);\n                          }}\n                        >\n                          {section.Section}\n                          <MDBIcon\n                            icon={\n                              collapseId === \"section-\" + section.id\n                                ? \"angle-up\"\n                                : \"angle-down\"\n                            }\n                          />\n                        </div>\n                        <MDBCollapse\n                          id={\"section-\" + section.id}\n                          isOpen={collapseId}\n                          className=\"border-left border-right border-bottom p-2\"\n                        >\n                          {section.skill.map((skill) => {\n                            return (\n                              <div className=\"custom-control custom-checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id={\"skill-id-\" + skill.id + \"-\" + section.id}\n                                  value={true}\n                                  name={\"skills.\" + skill.id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  disabled={isSubmitting}\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor={\n                                    \"skill-id-\" + skill.id + \"-\" + section.id\n                                  }\n                                >\n                                  {skill.Skill}\n                                </label>\n                              </div>\n                            );\n                          })}\n                        </MDBCollapse>\n                        {/*{console.log(\"values\", values, values.skills.keys())}*/}\n                      </>\n                    );\n                  })}\n                  <MDBBtn onClick={handleSubmit} disabled={isSubmitting}>\n                    Szukaj\n                    {isSubmitting && (\n                      <div\n                        className=\"spinner-border spinner-border-sm\"\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    )}\n                  </MDBBtn>\n                </Form>\n              </MDBContainer>\n            </MDBContainer>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default TaskSearch;\n","var map = {\n\t\"./Helvetica-Bold.afm\": \"./node_modules/pdfkit/js/data/Helvetica-Bold.afm\",\n\t\"./Helvetica-BoldOblique.afm\": \"./node_modules/pdfkit/js/data/Helvetica-BoldOblique.afm\",\n\t\"./Helvetica-Oblique.afm\": \"./node_modules/pdfkit/js/data/Helvetica-Oblique.afm\",\n\t\"./Helvetica.afm\": \"./node_modules/pdfkit/js/data/Helvetica.afm\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/pdfkit/js/data sync Helvetica.*\\\\.afm$\";","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}