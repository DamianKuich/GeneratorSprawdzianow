{"version":3,"sources":["webpack:///./djsr/frontend/src/components/RemindPassword.js"],"names":["RemindPassword","props","state","done","email","Yup","shape","required","values","helpers","setTimeout","setSubmitting","axiosInstanceNoAuth","post","then","response","setState","error","errResponse","setValues","setTouched","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","token","Component"],"mappings":"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","file":"9.main.js","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCol, MDBRow } from \"mdbreact\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { axiosInstanceNoAuth } from \"./axiosAPI\";\nimport FormikMdInput from \"./FormikMDInput\";\n// import PropTypes from 'prop-types';\n\nclass RemindPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: null,\n    };\n  }\n  //\n  // componentWillMount() {\n  //\n  // }\n  //\n  // componentDidMount() {\n  //\n  // }\n  //\n  // componentWillReceiveProps(nextProps) {\n  //\n  // }\n  //\n  // shouldComponentUpdate(nextProps, nextState) {\n  //\n  // }\n  //\n  // componentWillUpdate(nextProps, nextState) {\n  //\n  // }\n  //\n  // componentDidUpdate(prevProps, prevState) {\n  //\n  // }\n  //\n  // componentWillUnmount() {\n  //\n  // }\n\n  render() {\n    if (this.state.done) {\n      return (\n        <MDBRow center>\n          <MDBCol md=\"6\" sm=\"8\" xs=\"12\" lg=\"6\" xl=\"4\">Sprawdz poczte</MDBCol>\n        </MDBRow>\n      );\n    }\n    return (\n      <MDBRow center>\n        <MDBCol md=\"6\" sm=\"8\" xs=\"12\" lg=\"6\" xl=\"4\">\n          <MDBCard>\n            <MDBCardBody className=\"p-md-5 p-lg-5 p-xl-5\">\n              <Formik\n                initialValues={{\n                  email: \"\",\n                }}\n                validationSchema={Yup.object().shape({\n                  email: Yup.string()\n                    .email(\"Nieprawidłowy adres e-mail\")\n                    .required(\"Wymagany dres e-mail\"),\n                })}\n                onSubmit={(values, helpers) => {\n                  setTimeout(() => {\n                    helpers.setSubmitting(true);\n                    axiosInstanceNoAuth\n                      .post(\"/user/resetsend/\", {\n                        email: values.email,\n                      })\n                      .then((response) => {\n                        helpers.setSubmitting(false);\n                        this.setState({\n                          done: true,\n                        });\n                      })\n                      .catch((error) => {\n                        // console.log(\"login error\", error.response);\n                        const errResponse = error.response;\n                        helpers.setSubmitting(false);\n                        helpers.setValues(\n                          {\n                            email: \"\",\n                          },\n                          false\n                        );\n                        helpers.setTouched(\n                          {\n                            email: false,\n                          },\n                          false\n                        );\n                        helpers.setFieldError(\n                          \"general\",\n                          \"Nie isntieje konto o takim adresie E-mail\"\n                        );\n                      });\n                  }, 500);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                }) => (\n                  <Form onSubmit={handleSubmit}>\n                    <p className=\"h3 text-center mb-4\">Przypomnij hasło</p>\n                    <div className=\"grey-text\">\n                      <FormikMdInput\n                        label=\"Twój adres E-mail\"\n                        icon=\"fa-envelope\"\n                        errors={errors.email}\n                        name=\"email\"\n                        id=\"email\"\n                        touched={touched.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                        disabled={isSubmitting}\n                      />\n                    </div>\n                    <div className=\"text-center\">\n                      <MDBBtn\n                        color=\"primary\"\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                      >\n                        Wyślij\n                      </MDBBtn>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n              {!!this.state.token && <div>{this.state.token}</div>}\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    );\n  }\n}\n\n// RemindPassword.propTypes = {};\n\nexport default RemindPassword;\n"],"sourceRoot":""}