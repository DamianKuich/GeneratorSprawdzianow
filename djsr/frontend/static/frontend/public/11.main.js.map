{"version":3,"sources":["webpack:///./djsr/frontend/src/components/MaterialFormikField.js","webpack:///./djsr/frontend/src/components/MaterialUiSignUpPage.js","webpack:///./node_modules/@material-ui/icons/Delete.js","webpack:///./node_modules/@material-ui/icons/Favorite.js"],"names":["MaterialFormikField","inputProps","type","labelText","field","name","fieldProps","form","errors","formProps","formControlProps","props","error","touched","children","propTypes","useStyles","makeStyles","styles","MaterialUiSignUpPage","FRS","user","appState","history","push","React","useState","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","image","backgroundSize","backgroundPosition","container","email","password","passwordConfirm","Yup","shape","min","max","required","oneOf","values","helpers","setSubmitting","axiosInstanceNoAuth","post","username","then","response","setState","token","data","confirmation_token","errResponse","setValues","setTouched","setFieldError","handleChange","handleBlur","handleSubmit","isSubmitting","console","log","cardHeader","fullWidth","endAdornment","inputIconsColor","cardFooter"],"mappings":"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","file":"11.main.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput\";\r\n\r\nconst MaterialFormikField = ({\r\n  inputProps,\r\n  type,\r\n  labelText,\r\n  field: { name, ...fieldProps },\r\n    form:{errors,...formProps},\r\n    formControlProps,\r\n    ...props\r\n}) => {\r\n  const error=errors[name];\r\n  const touched=formProps.touched[name];\r\n  return (\r\n    <CustomInput\r\n      labelText={labelText}\r\n      id={name}\r\n      error={touched && !!error}\r\n      success={touched && !error}\r\n      formControlProps={formControlProps}\r\n      // helperProps={{\r\n      //   children: !!errors.name && touched.name ? errors.name : \" \",\r\n      //   error: true,\r\n      // }}\r\n        helperProps={{\r\n            children: !!error && touched ? error : \" \",\r\n            error: !!error && touched\r\n        }}\r\n      inputProps={{\r\n        type: type,\r\n        name: name,\r\n        // onChange: handleChange,\r\n        // onBlur: handleBlur,\r\n        // value: values.name,\r\n        ...fieldProps,\r\n        // endAdornment: (\r\n        //   <InputAdornment position=\"end\">\r\n        //     <People className={classes.inputIconsColor} />\r\n        //   </InputAdornment>\r\n        // ),\r\n          ...inputProps\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nMaterialFormikField.propTypes = {};\r\n\r\nexport default MaterialFormikField;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport Header from \"./material_ui_components/Header/Header.js\";\r\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\r\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\r\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\r\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\r\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\r\nimport Card from \"./material_ui_components/Card/Card.js\";\r\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\r\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\r\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\r\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\r\nimport image from \"./img/genspr-parralax-bg.png\";\r\nimport * as Yup from \"yup\";\r\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\r\nimport { Formik, Field } from \"formik\";\r\nimport MaterialFormikField from \"./MaterialFormikField\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MaterialUiSignUpPage = (props) => {\r\n  const FRS = \"Pole wymagane\";\r\n  const user = props.appState.user;\r\n  if (!!user) {\r\n    props.history.push(\"/\");\r\n  }\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  setTimeout(function () {\r\n    setCardAnimation(\"\");\r\n  }, 700);\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classes.pageHeader}\r\n        style={{\r\n          backgroundImage: \"url(\" + image + \")\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"top center\",\r\n        }}\r\n      >\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card className={classes[cardAnimaton]}>\r\n                <Formik\r\n                  initialValues={{\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    passwordConfirm: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    name: Yup.string()\r\n                      .min(2, \"Too Short!\")\r\n                      .max(50, \"Too Long!\")\r\n                      .required(FRS),\r\n                    password: Yup.string()\r\n                      .min(8, \"Too Short!\")\r\n                      .max(50, \"Too Long!\")\r\n                      .required(FRS),\r\n                    passwordConfirm: Yup.string()\r\n                      .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\r\n                      .required(FRS),\r\n                    email: Yup.string()\r\n                      .email(\"Nieprawidłowy adres e-mail\")\r\n                      .required(FRS),\r\n                  })}\r\n                  onSubmit={(values, helpers) => {\r\n                    setTimeout(() => {\r\n                      helpers.setSubmitting(true);\r\n                      axiosInstanceNoAuth\r\n                        .post(\"/user/create/\", {\r\n                          username: values.name,\r\n                          password: values.password,\r\n                          email: values.email,\r\n                        })\r\n                        .then((response) => {\r\n                          helpers.setSubmitting(false);\r\n                          this.setState({\r\n                            token: response.data.confirmation_token,\r\n                          });\r\n                          this.props.history.push(\r\n                            `/signupsuccess/${response.data.confirmation_token}`\r\n                          );\r\n                        })\r\n                        .catch((error) => {\r\n                          // console.log(\"login error\", error.response);\r\n                          const errResponse = error.response;\r\n                          helpers.setSubmitting(false);\r\n                          helpers.setValues(\r\n                            {\r\n                              name: \"\",\r\n                              password: \"\",\r\n                              passwordConfirm: \"\",\r\n                              email: \"\",\r\n                            },\r\n                            false\r\n                          );\r\n                          helpers.setTouched(\r\n                            {\r\n                              name: false,\r\n                              password: false,\r\n                              email: false,\r\n                              passwordConfirm: false,\r\n                            },\r\n                            false\r\n                          );\r\n                          helpers.setFieldError(\r\n                            \"general\",\r\n                            \"Nierpawidłowa nazwa użytkownika lub hasło\"\r\n                          );\r\n                        });\r\n                    }, 5000);\r\n                  }}\r\n                >\r\n                  {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                  }) => (\r\n                    <form className={classes.form}>\r\n                      {console.log(touched, errors)}\r\n                      <CardHeader\r\n                        color=\"primary\"\r\n                        className={classes.cardHeader}\r\n                      >\r\n                        <h4>Rejestracja</h4>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                        <Field\r\n                          component={MaterialFormikField}\r\n                          name={\"name\"}\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          labelText=\"Nazwa użytkownika\"\r\n                          inputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <People className={classes.inputIconsColor} />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        <Field\r\n                          component={MaterialFormikField}\r\n                          name={\"email\"}\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          labelText=\"E-mail\"\r\n                          inputProps={{\r\n                            \r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <People className={classes.inputIconsColor} />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        {/*<CustomInput*/}\r\n                        {/*  labelText=\"Hasło\"*/}\r\n                        {/*  id=\"password\"*/}\r\n                        {/*  error={!!errors.password}*/}\r\n                        {/*  success={touched.password && !errors.password}*/}\r\n                        {/*  formControlProps={{*/}\r\n                        {/*    fullWidth: true,*/}\r\n                        {/*  }}*/}\r\n                        {/*  helperProps={{*/}\r\n                        {/*    children: errors.password,*/}\r\n                        {/*    error: true,*/}\r\n                        {/*  }}*/}\r\n                        {/*  inputProps={{*/}\r\n                        {/*    type: \"text\",*/}\r\n                        {/*    name: \"password\",*/}\r\n                        {/*    onChange: handleChange,*/}\r\n                        {/*    onBlur: handleBlur,*/}\r\n                        {/*    value: values.password,*/}\r\n                        {/*    endAdornment: (*/}\r\n                        {/*      <InputAdornment position=\"end\">*/}\r\n                        {/*        <LockIcon className={classes.inputIconsColor} />*/}\r\n                        {/*      </InputAdornment>*/}\r\n                        {/*    ),*/}\r\n                        {/*  }}*/}\r\n                        {/*/>*/}\r\n                        <Field\r\n                          component={MaterialFormikField}\r\n                          name={\"password\"}\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          labelText=\"Hasło\"\r\n                          inputProps={{\r\n                            type:\"password\",\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <LockIcon className={classes.inputIconsColor} />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        {/*<CustomInput*/}\r\n                        {/*  labelText=\"Powtórz hasło\"*/}\r\n                        {/*  id=\"password\"*/}\r\n                        {/*  error={!!errors.passwordConfirm}*/}\r\n                        {/*  success={*/}\r\n                        {/*    touched.passwordConfirm && !errors.passwordConfirm*/}\r\n                        {/*  }*/}\r\n                        {/*  formControlProps={{*/}\r\n                        {/*    fullWidth: true,*/}\r\n                        {/*  }}*/}\r\n                        {/*  helperProps={{*/}\r\n                        {/*    children: errors.passwordConfirm,*/}\r\n                        {/*    error: true,*/}\r\n                        {/*  }}*/}\r\n                        {/*  inputProps={{*/}\r\n                        {/*    type: \"password\",*/}\r\n                        {/*    name: \"passwordConfirm\",*/}\r\n                        {/*    onChange: handleChange,*/}\r\n                        {/*    onBlur: handleBlur,*/}\r\n                        {/*    value: values.passwordConfirm,*/}\r\n                        {/*    endAdornment: (*/}\r\n                        {/*      <InputAdornment position=\"end\">*/}\r\n                        {/*        <LockIcon className={classes.inputIconsColor} />*/}\r\n                        {/*      </InputAdornment>*/}\r\n                        {/*    ),*/}\r\n                        {/*  }}*/}\r\n                        {/*/>*/}\r\n                        <Field\r\n                          component={MaterialFormikField}\r\n                          name={\"passwordConfirm\"}\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          labelText=\"Powtórz hasło\"\r\n                          inputProps={{\r\n                            type:\"password\",\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <LockIcon className={classes.inputIconsColor} />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CardBody>\r\n                      <CardFooter className={classes.cardFooter}>\r\n\r\n                            <Button\r\n                          simple\r\n                          color=\"primary\"\r\n                          size=\"lg\"\r\n                          onClick={() => {\r\n                            handleSubmit();\r\n                          }}\r\n                        >\r\n                          Zarejestruj\r\n                        </Button>\r\n                   \r\n                        \r\n                      </CardFooter>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialUiSignUpPage;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;"],"sourceRoot":""}