{"version":3,"sources":["webpack:///./djsr/frontend/src/components/MaterialUiManageAccount.js","webpack:///./djsr/frontend/src/components/img/genesprDark.png"],"names":["useStyles","makeStyles","styles","MaterialUiManageAccount","props","FRS","user","appState","React","useState","editView","setEditView","useSnackbar","enqueueSnackbar","closeSnackbar","bgStyles","paperContainer","backgroundImage","image","minHeight","examCardContainer","width","backgroundColor","cardTitle","textAlign","cardAnimaton","setCardAnimation","setTimeout","classes","rest","container","email","Yup","shape","min","max","required","values","helpers","setSubmitting","axiosInstance","put","then","response","setUser","data","variant","setStatus","setState","locked","error","errResponse","setValues","setTouched","name","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","console","log","cardHeader","e","MaterialFormikField","fullWidth","endAdornment","inputIconsColor","cardFooter","username","password","passwordConfirm","oldPassword","oneOf","oldpassword","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAGC,2EAAU,CAACC,0FAAD,CAA5B;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AACzC,MAAMC,GAAG,GAAG,eAAZ;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,QAAN,CAAeD,IAA5B;;AAFyC,wBAGTE,4CAAK,CAACC,QAAN,CAAe,OAAf,CAHS;AAAA;AAAA,MAGlCC,QAHkC;AAAA,MAGxBC,WAHwB;;AAAA,qBAIEC,8DAAW,EAJb;AAAA,MAIjCC,eAJiC,gBAIjCA,eAJiC;AAAA,MAIhBC,aAJgB,gBAIhBA,aAJgB;;AAM3C,MAAMC,QAAQ,GAAG;AACfC,kBAAc,EAAE;AACZC,qBAAe,gBAASC,6DAAT,MADH;AAGZC,eAAS,EAAE;AAHC,KADD;AAYfC,qBAAiB,EAAE;AACjBC,WAAK,EAAE,GADU;AAEjBC,qBAAe,EAAE;AAFA,KAZJ;AAmBfC,aAAS,EAAE;AACTC,eAAS,EAAC;AADD;AAnBI,GAAjB;;AAN2C,yBAgCAhB,4CAAK,CAACC,QAAN,CAAe,YAAf,CAhCA;AAAA;AAAA,MAgClCgB,YAhCkC;AAAA,MAgCpBC,gBAhCoB;;AAiCzCC,YAAU,CAAC,YAAY;AACrBD,oBAAgB,CAAC,EAAD,CAAhB;AACD,GAFS,EAEP,GAFO,CAAV;AAGA,MAAME,OAAO,GAAG5B,SAAS,EAAzB;;AApCyC,MAqC9B6B,IArC8B,gBAqCrBzB,KArCqB;;AAsCzC,sBACE,qFACE,2DAAC,+DAAD;AACC,SAAK,EAAEW,QAAQ,CAACC;AADjB,kBAGE;AAAK,aAAS,EAAEY,OAAO,CAACE;AAAxB,kBACE,2DAAC,sFAAD;AAAe,WAAO,EAAC;AAAvB,kBACE,2DAAC,iFAAD;AAAU,MAAE,EAAE,EAAd;AAAkB,MAAE,EAAE,EAAtB;AAA0B,MAAE,EAAE;AAA9B,kBACE,2DAAC,6EAAD;AAAM,aAAS,EAAEF,OAAO,CAACH,YAAD;AAAxB,KACCf,QAAQ,IAAE,OAAV,gBAEP,2DAAC,8CAAD;AACA,iBAAa,EAAE;AACbqB,WAAK,EAAE;AADM,KADf;AAIA,oBAAgB,EAAEC,2CAAA,GAAaC,KAAb,CAAmB;AACnCF,WAAK,EAAEC,2CAAA,GACJE,GADI,CACA,CADA,EACG,YADH,EAEJC,GAFI,CAEA,EAFA,EAEI,WAFJ,EAGJC,QAHI,CAGK/B,GAHL;AAD4B,KAAnB,CAJlB;AAUA,YAAQ,EAAE,kBAACgC,MAAD,EAASC,OAAT,EAAqB;AAC3BX,gBAAU,CAAC,YAAM;AAEfW,eAAO,CAACC,aAAR,CAAsB,IAAtB;AACAC,0DAAa,CACVC,GADH,CACO,eADP,EACwB;AACpBV,eAAK,EAAEM,MAAM,CAACN;AADM,SADxB,EAIGW,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,eAAI,CAACvC,KAAL,CAAWwC,OAAX,CAAmBD,QAAQ,CAACE,IAA5B;;AACAhC,yBAAe,CAAC,0BAAD,EAA6B;AAC1CiC,mBAAO,EAAE;AADiC,WAA7B,CAAf;AAGAR,iBAAO,CAACS,SAAR,CAAkB,0BAAlB;AACAT,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;AACD,SAZH,WAaS,UAACC,KAAD,EAAW;AAChB;AACA,cAAMC,WAAW,GAAGD,KAAK,CAACP,QAA1B;AACA9B,yBAAe,CAAC,uDAAD,EAA0D;AACvEiC,mBAAO,EAAE;AAD8D,WAA1D,CAAf;AAGAR,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;;AACAX,iBAAO,CAACc,SAAR,CACE;AACErB,iBAAK,EAAE;AADT,WADF,EAIE,KAJF;AAMAO,iBAAO,CAACe,UAAR,CACE;AACEC,gBAAI,EAAE;AADR,WADF,EAIE,KAJF;AAMAhB,iBAAO,CAACiB,aAAR,CACE,MADF,EAEE,6CAFF;AAID,SArCH;AAsCD,OAzCS,EAyCP,GAzCO,CAAV;AA0CD;AArDH,KAuDC;AAAA,QACClB,MADD,QACCA,MADD;AAAA,QAECmB,MAFD,QAECA,MAFD;AAAA,QAGCC,OAHD,QAGCA,OAHD;AAAA,QAICC,YAJD,QAICA,YAJD;AAAA,QAKCC,UALD,QAKCA,UALD;AAAA,QAMCC,YAND,QAMCA,YAND;AAAA,QAOCC,YAPD,QAOCA,YAPD;AAAA,wBASC;AAAM,eAAS,EAAEjC,OAAO,CAACkC;AAAzB,OACGC,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBD,MAArB,CADH,eAEE,2DAAC,mFAAD;AACE,WAAK,EAAC,SADR;AAEE,eAAS,EAAE5B,OAAO,CAACqC;AAFrB,oBAIE,qFAJF,CAFF,eASE,2DAAC,iFAAD,qBAEA,2DAAC,+DAAD;AAAM,eAAS,MAAf;AAAgB,aAAO,EAAC;AAAxB,oBACA,2DAAC,2EAAD;AACY,iBAAW,EAAC,UADxB;AAEY,WAAK,EAAC,SAFlB;AAGY,oBAAW,yCAHvB;AAIY,aAAO,EAAC;AAJpB,oBAME,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACC,CAAD;AAAA,eAAKvD,WAAW,CAAC,OAAD,CAAhB;AAAA;AAArD,2BANF,eASE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,MAAD,CAAhB;AAAA;AAArD,gDATF,eAYE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,UAAD,CAAhB;AAAA;AAArD,+BAZF,CADA,CAFA,eAsBI,2DAAC,6CAAD;AACA,eAAS,EAAEwD,6DADX;AAEA,UAAI,EAAE,OAFN;AAGA,sBAAgB,EAAE;AAChBC,iBAAS,EAAE;AADK,OAHlB;AAMA,eAAS,EAAC,cANV;AAOA,gBAAU,EAAE;AACVC,oBAAY,eACV,2DAAC,wEAAD;AAAgB,kBAAQ,EAAC;AAAzB,wBACE,2DAAC,gEAAD;AAAQ,mBAAS,EAAEzC,OAAO,CAAC0C;AAA3B,UADF;AAFQ;AAPZ,MAtBJ,CATF,eAgDE,2DAAC,mFAAD;AAAY,eAAS,EAAE1C,OAAO,CAAC2C;AAA/B,oBACE,2DAAC,wFAAD;AACE,YAAM,MADR;AAEE,WAAK,EAAC,SAFR;AAGE,UAAI,EAAC,IAHP;AAIE,aAAO,EAAE,mBAAM;AACbX,oBAAY;AACb,OANH;AAOE,cAAQ,EAAGC;AAPb,yBADF,EAagBA,YAAY,iBACb,2DAAC,cAAD,OAdf,CAhDF,CATD;AAAA,GAvDD,CAFO,gBAyIL,uHA1II,EA8IJnD,QAAQ,IAAE,MAAV,gBAEF,2DAAC,8CAAD;AACA,iBAAa,EAAE;AACb4C,UAAI,EAAE;AADO,KADf;AAIA,oBAAgB,EAAEtB,2CAAA,GAAaC,KAAb,CAAmB;AACnCqB,UAAI,EAAEtB,2CAAA,GACHE,GADG,CACC,CADD,EACI,YADJ,EAEHC,GAFG,CAEC,EAFD,EAEK,WAFL,EAGHC,QAHG,CAGM/B,GAHN;AAD6B,KAAnB,CAJlB;AAUA,YAAQ,EAAE,kBAACgC,MAAD,EAASC,OAAT,EAAqB;AAC3BX,gBAAU,CAAC,YAAM;AAEfW,eAAO,CAACC,aAAR,CAAsB,IAAtB;AACAC,0DAAa,CACVC,GADH,CACO,eADP,EACwB;AACpB+B,kBAAQ,EAAEnC,MAAM,CAACiB;AADG,SADxB,EAIGZ,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,eAAI,CAACvC,KAAL,CAAWwC,OAAX,CAAmBD,QAAQ,CAACE,IAA5B;;AACAhC,yBAAe,CAAC,0BAAD,EAA6B;AAC1CiC,mBAAO,EAAE;AADiC,WAA7B,CAAf;AAGAR,iBAAO,CAACS,SAAR,CAAkB,0BAAlB;AACAT,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;AACD,SAZH,WAaS,UAACC,KAAD,EAAW;AAChB;AACA,cAAMC,WAAW,GAAGD,KAAK,CAACP,QAA1B;AACA9B,yBAAe,CAAC,mCAAD,EAAsC;AACnDiC,mBAAO,EAAE;AAD0C,WAAtC,CAAf;AAGAR,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;;AACAX,iBAAO,CAACc,SAAR,CACE;AACEE,gBAAI,EAAE;AADR,WADF,EAIE,KAJF;AAMAhB,iBAAO,CAACe,UAAR,CACE;AACEC,gBAAI,EAAE;AADR,WADF,EAIE,KAJF;AAMAhB,iBAAO,CAACiB,aAAR,CACE,MADF,EAEE,6CAFF;AAID,SArCH;AAsCD,OAzCS,EAyCP,GAzCO,CAAV;AA0CD;AArDH,KAuDC;AAAA,QACClB,MADD,SACCA,MADD;AAAA,QAECmB,MAFD,SAECA,MAFD;AAAA,QAGCC,OAHD,SAGCA,OAHD;AAAA,QAICC,YAJD,SAICA,YAJD;AAAA,QAKCC,UALD,SAKCA,UALD;AAAA,QAMCC,YAND,SAMCA,YAND;AAAA,QAOCC,YAPD,SAOCA,YAPD;AAAA,wBASC;AAAM,eAAS,EAAEjC,OAAO,CAACkC;AAAzB,OACGC,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBD,MAArB,CADH,eAEE,2DAAC,mFAAD;AACE,WAAK,EAAC,SADR;AAEE,eAAS,EAAE5B,OAAO,CAACqC;AAFrB,oBAIE,qFAJF,CAFF,eASE,2DAAC,iFAAD,qBAEA,2DAAC,+DAAD;AAAM,eAAS,MAAf;AAAgB,aAAO,EAAC;AAAxB,oBACA,2DAAC,2EAAD;AACY,iBAAW,EAAC,UADxB;AAEY,WAAK,EAAC,SAFlB;AAGY,oBAAW,yCAHvB;AAIY,aAAO,EAAC;AAJpB,oBAME,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACC,CAAD;AAAA,eAAKvD,WAAW,CAAC,OAAD,CAAhB;AAAA;AAArD,2BANF,eASE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,MAAD,CAAhB;AAAA;AAArD,gDATF,eAYE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,UAAD,CAAhB;AAAA;AAArD,+BAZF,CADA,CAFA,eAsBI,2DAAC,6CAAD;AACA,eAAS,EAAEwD,6DADX;AAEA,UAAI,EAAE,MAFN;AAGA,sBAAgB,EAAE;AAChBC,iBAAS,EAAE;AADK,OAHlB;AAMA,eAAS,EAAC,wBANV;AAOA,gBAAU,EAAE;AACVC,oBAAY,eACV,2DAAC,wEAAD;AAAgB,kBAAQ,EAAC;AAAzB,wBACE,2DAAC,gEAAD;AAAQ,mBAAS,EAAEzC,OAAO,CAAC0C;AAA3B,UADF;AAFQ;AAPZ,MAtBJ,CATF,eAgDE,2DAAC,mFAAD;AAAY,eAAS,EAAE1C,OAAO,CAAC2C;AAA/B,oBACE,2DAAC,wFAAD;AACE,YAAM,MADR;AAEE,WAAK,EAAC,SAFR;AAGE,UAAI,EAAC,IAHP;AAIE,aAAO,EAAE,mBAAM;AACbX,oBAAY;AACb,OANH;AAOE,cAAQ,EAAGC;AAPb,yBADF,EAagBA,YAAY,iBACb,2DAAC,cAAD,OAdf,CAhDF,CATD;AAAA,GAvDD,CAFE,gBAyIA,uHAvRI,EA2RbnD,QAAQ,IAAE,UAAV,gBAEO,2DAAC,8CAAD;AACA,iBAAa,EAAE;AACX+D,cAAQ,EAAE,EADC;AAEXC,qBAAe,EAAE,EAFN;AAGXC,iBAAW,EAAE;AAHF,KADf;AAMA,oBAAgB,EAAE3C,2CAAA,GAAaC,KAAb,CAAmB;AACjCwC,cAAQ,EAAEzC,2CAAA,GACPE,GADO,CACH,CADG,EACA,YADA,EAEPC,GAFO,CAEH,EAFG,EAEC,WAFD,EAGPC,QAHO,CAGE,eAHF,EAIPwC,KAJO,CAKN,CAAC5C,wCAAA,CAAQ,iBAAR,CAAD,CALM,EAMN,gBANM,CADuB;AASjC2C,iBAAW,EAAE3C,2CAAA,GACVE,GADU,CACN,CADM,EACH,YADG,EAEVC,GAFU,CAEN,EAFM,EAEF,WAFE,EAGVC,QAHU,CAGD,eAHC,CAToB;AAajCsC,qBAAe,EAAE1C,2CAAA,GACd4C,KADc,CACR,CAAC5C,wCAAA,CAAQ,UAAR,CAAD,CADQ,EACe,gBADf,EAEdI,QAFc,CAEL,eAFK;AAbgB,KAAnB,CANlB;AAuBE,YAAQ,EAAE,kBAACC,MAAD,EAASC,OAAT,EAAqB;AAC7BX,gBAAU,CAAC,YAAM;AACfW,eAAO,CAACC,aAAR,CAAsB,IAAtB;AACAC,0DAAa,CACVC,GADH,CACO,eADP,EACwB;AACpBgC,kBAAQ,EAAEpC,MAAM,CAACoC,QADG;AAEpBI,qBAAW,EAAExC,MAAM,CAACsC;AAFA,SADxB,EAKGjC,IALH,CAKQ,UAACC,QAAD,EAAc;AAClB,eAAI,CAACvC,KAAL,CAAWwC,OAAX,CAAmBD,QAAQ,CAACE,IAA5B;;AACAhC,yBAAe,CAAC,0BAAD,EAA6B;AAC1CiC,mBAAO,EAAE;AADiC,WAA7B,CAAf;AAGAR,iBAAO,CAACS,SAAR,CAAkB,2BAAlB;AACAT,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;AACD,SAbH,WAcS,UAACC,KAAD,EAAW;AAChBrC,yBAAe,CAAC,+CAAD,EAAkD;AAC/DiC,mBAAO,EAAE;AADsD,WAAlD,CAAf;AAGAR,iBAAO,CAACS,SAAR,CAAkB,qCAAlB;AACAgB,iBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,KAAK,CAACP,QAApC;AACA,cAAMQ,WAAW,GAAGD,KAAK,CAACP,QAA1B;AACAL,iBAAO,CAACC,aAAR,CAAsB,KAAtB;;AACA,eAAI,CAACS,QAAL,CAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd;;AACAX,iBAAO,CAACc,SAAR,CACE;AACEqB,oBAAQ,EAAE,EADZ;AAEEE,uBAAW,EAAE,EAFf;AAGED,2BAAe,EAAC;AAHlB,WADF,EAOE,KAPF;AASApC,iBAAO,CAACe,UAAR,CACE;AACEoB,oBAAQ,EAAE,KADZ;AAEEE,uBAAW,EAAE,KAFf;AAGED,2BAAe,EAAC;AAHlB,WADF,EAME,KANF;AAQApC,iBAAO,CAACiB,aAAR,CACE,aADF,EAEE,kCAFF;AAKD,SA7CH;AA8CD,OAhDS,EAgDP,GAhDO,CAAV;AAiDD;AAzEH,KA2EC;AAAA,QACClB,MADD,SACCA,MADD;AAAA,QAECmB,MAFD,SAECA,MAFD;AAAA,QAGCC,OAHD,SAGCA,OAHD;AAAA,QAICC,YAJD,SAICA,YAJD;AAAA,QAKCC,UALD,SAKCA,UALD;AAAA,QAMCC,YAND,SAMCA,YAND;AAAA,QAOCC,YAPD,SAOCA,YAPD;AAAA,wBASC;AAAM,eAAS,EAAEjC,OAAO,CAACkC;AAAzB,OACGC,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBD,MAArB,CADH,eAEE,2DAAC,mFAAD;AACE,WAAK,EAAC,SADR;AAEE,eAAS,EAAE5B,OAAO,CAACqC;AAFrB,oBAIE,qFAJF,CAFF,eASE,2DAAC,iFAAD,qBACA,2DAAC,+DAAD;AAAM,eAAS,MAAf;AAAgB,aAAO,EAAC;AAAxB,oBACA,2DAAC,2EAAD;AACY,iBAAW,EAAC,UADxB;AAEY,WAAK,EAAC,SAFlB;AAGY,oBAAW,yCAHvB;AAIY,aAAO,EAAC;AAJpB,oBAME,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACC,CAAD;AAAA,eAAKvD,WAAW,CAAC,OAAD,CAAhB;AAAA;AAArD,2BANF,eASE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,MAAD,CAAhB;AAAA;AAArD,gDATF,eAYE,2DAAC,wFAAD;AAAQ,aAAO,EAAC,WAAhB;AAA4B,WAAK,EAAC,SAAlC;AAA4C,aAAO,EAAE,iBAACuD,CAAD;AAAA,eAAKvD,WAAW,CAAC,UAAD,CAAhB;AAAA;AAArD,+BAZF,CADA,CADA,eAqBA,2DAAC,6CAAD;AACI,eAAS,EAAEwD,6DADf;AAEI,UAAI,EAAE,UAFV;AAGI,sBAAgB,EAAE;AAChBC,iBAAS,EAAE;AADK,OAHtB;AAMI,eAAS,EAAC,YANd;AAOI,gBAAU,EAAE;AACVU,YAAI,EAAE,UADI;AAEVT,oBAAY,eACV,2DAAC,wEAAD;AAAgB,kBAAQ,EAAC;AAAzB,wBACE,2DAAC,8DAAD;AAAU,mBAAS,EAAEzC,OAAO,CAAC0C;AAA7B,UADF;AAHQ;AAPhB,MArBA,eAqCA,2DAAC,6CAAD;AACI,eAAS,EAAEH,6DADf;AAEI,UAAI,EAAE,iBAFV;AAGI,sBAAgB,EAAE;AAChBC,iBAAS,EAAE;AADK,OAHtB;AAMI,eAAS,EAAC,uBANd;AAOI,gBAAU,EAAE;AACVU,YAAI,EAAE,UADI;AAEVT,oBAAY,eACV,2DAAC,wEAAD;AAAgB,kBAAQ,EAAC;AAAzB,wBACE,2DAAC,8DAAD;AAAU,mBAAS,EAAEzC,OAAO,CAAC0C;AAA7B,UADF;AAHQ;AAPhB,MArCA,eAsDA,2DAAC,6CAAD;AACI,eAAS,EAAEH,6DADf;AAEI,UAAI,EAAE,aAFV;AAGI,sBAAgB,EAAE;AAChBC,iBAAS,EAAE;AADK,OAHtB;AAMI,eAAS,EAAC,wBANd;AAOI,gBAAU,EAAE;AACVU,YAAI,EAAE,UADI;AAEVT,oBAAY,eACV,2DAAC,wEAAD;AAAgB,kBAAQ,EAAC;AAAzB,wBACE,2DAAC,8DAAD;AAAU,mBAAS,EAAEzC,OAAO,CAAC0C;AAA7B,UADF;AAHQ;AAPhB,MAtDA,CATF,eAqFE,2DAAC,mFAAD;AAAY,eAAS,EAAE1C,OAAO,CAAC2C;AAA/B,oBACE,2DAAC,wFAAD;AACE,YAAM,MADR;AAEE,WAAK,EAAC,SAFR;AAGE,UAAI,EAAC,IAHP;AAIE,aAAO,EAAE,mBAAM;AACbX,oBAAY;AACb,OANH;AAOE,cAAQ,EAAGC;AAPb,yBADF,EAagBA,YAAY,iBACb,2DAAC,cAAD,OAdf,CArFF,CATD;AAAA,GA3ED,CAFP,gBAkMS,uHA7dI,CADF,CADF,CADF,CAHF,CADF,CADF;AAgfD,CAthBD;;AAwhBe1D,sFAAf,E;;;;;;;;;;;;AC1jBA;AAAe,oFAAuB,yCAAyC,E","file":"17.main.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Header from \"./material_ui_components/Header/Header.js\";\r\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\r\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\r\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\r\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\r\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\r\nimport Card from \"./material_ui_components/Card/Card.js\";\r\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\r\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\r\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\r\nimport { useSnackbar } from 'notistack';\r\nimport image from \"./img/genesprDark.png\";\r\nimport * as Yup from \"yup\";\r\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\r\nimport { Formik, Field } from \"formik\";\r\nimport MaterialFormikField from \"./MaterialFormikField\";\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MaterialUiManageAccount = (props) => {\r\n  const FRS = \"Pole wymagane\";\r\n  const user = props.appState.user;\r\n  const [editView, setEditView] = React.useState(\"email\");\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  \r\nconst bgStyles = {\r\n  paperContainer: {\r\n      backgroundImage: `url(${image})`,\r\n      \r\n      minHeight: 1000,\r\n\r\n     \r\n     \r\n\r\n\r\n     \r\n  },\r\n  examCardContainer: {\r\n    width: 700,\r\n    backgroundColor: '#FEFEFA',\r\n\r\n    \r\n},\r\n\r\n  cardTitle: {\r\n    textAlign:'center'\r\n  }\r\n\r\n};\r\n\r\n\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  setTimeout(function () {\r\n    setCardAnimation(\"\");\r\n  }, 700);\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  return (\r\n    <div>\r\n      <Paper\r\n       style={bgStyles.paperContainer}\r\n      >\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card className={classes[cardAnimaton]}>\r\n              {editView==\"email\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .min(2, \"Too Short!\")\r\n            .max(50, \"Too Long!\")\r\n            .required(FRS),\r\n        })}\r\n        onSubmit={(values, helpers) => {\r\n            setTimeout(() => {\r\n              \r\n              helpers.setSubmitting(true);\r\n              axiosInstance\r\n                .put(\"/user/update/\", {\r\n                  email: values.email,\r\n                })\r\n                .then((response) => {\r\n                  this.props.setUser(response.data);\r\n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \r\n                    variant: 'success',\r\n                });\r\n                  helpers.setStatus(\"Pomyslnie zmieniono dane\");\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                })\r\n                .catch((error) => {\r\n                  // console.log(\"login error\", error.response);\r\n                  const errResponse = error.response;\r\n                  enqueueSnackbar(\"Adres e-mail jest już zajęty, bądź jest nieprawidłowy\", { \r\n                    variant: 'error',\r\n                });\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                  helpers.setValues(\r\n                    {\r\n                      email: \"\",\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setTouched(\r\n                    {\r\n                      name: false,\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setFieldError(\r\n                    \"name\",\r\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\r\n                  );\r\n                });\r\n            }, 400);\r\n          }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            \r\n            <Grid container justify=\"center\">\r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n            </Grid>\r\n              \r\n\r\n                <Field\r\n                component={MaterialFormikField}\r\n                name={\"email\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Adres e-mail\"\r\n                inputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <People className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n         \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n                disabled= {isSubmitting}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n              {\r\n                            isSubmitting &&  \r\n                           <LoadingScreenB></LoadingScreenB>\r\n                      \r\n                          }              \r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n        \r\n         {editView==\"name\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string()\r\n            .min(2, \"Too Short!\")\r\n            .max(50, \"Too Long!\")\r\n            .required(FRS),\r\n        })}\r\n        onSubmit={(values, helpers) => {\r\n            setTimeout(() => {\r\n              \r\n              helpers.setSubmitting(true);\r\n              axiosInstance\r\n                .put(\"/user/update/\", {\r\n                  username: values.name,\r\n                })\r\n                .then((response) => {\r\n                  this.props.setUser(response.data);\r\n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \r\n                    variant: 'error',\r\n                });\r\n                  helpers.setStatus(\"Pomyslnie zmieniono dane\");\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                })\r\n                .catch((error) => {\r\n                  // console.log(\"login error\", error.response);\r\n                  const errResponse = error.response;\r\n                  enqueueSnackbar(\"Nazwa użytkownika jest już zajęta\", { \r\n                    variant: 'error',\r\n                });\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                  helpers.setValues(\r\n                    {\r\n                      name: \"\",\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setTouched(\r\n                    {\r\n                      name: false,\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setFieldError(\r\n                    \"name\",\r\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\r\n                  );\r\n                });\r\n            }, 400);\r\n          }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            \r\n            <Grid container justify=\"center\">\r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n            </Grid>\r\n              \r\n\r\n                <Field\r\n                component={MaterialFormikField}\r\n                name={\"name\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Nazwa użytkownika\"\r\n                inputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <People className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n         \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n                disabled= {isSubmitting}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n              {\r\n                            isSubmitting &&  \r\n                           <LoadingScreenB></LoadingScreenB>\r\n                      \r\n                          } \r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n\r\n{editView==\"password\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            oldPassword: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n            password: Yup.string()\r\n              .min(8, \"Too Short!\")\r\n              .max(50, \"Too Long!\")\r\n              .required(\"Pole wymagane\")\r\n              .oneOf(\r\n                [Yup.ref(\"passwordConfirm\")],\r\n                \"Hasła są różne\"\r\n              ),\r\n            oldPassword: Yup.string()\r\n              .min(8, \"Too Short!\")\r\n              .max(50, \"Too Long!\")\r\n              .required(\"Pole wymagane\"),\r\n            passwordConfirm: Yup.string()\r\n              .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\r\n              .required(\"Pole wymagane\"),\r\n          })}\r\n          onSubmit={(values, helpers) => {\r\n            setTimeout(() => {\r\n              helpers.setSubmitting(true);\r\n              axiosInstance\r\n                .put(\"/user/update/\", {\r\n                  password: values.password,\r\n                  oldpassword: values.oldPassword,\r\n                })\r\n                .then((response) => {\r\n                  this.props.setUser(response.data);\r\n                  enqueueSnackbar(\"Pomyślnie zmieniono dane\", { \r\n                    variant: 'error',\r\n                });\r\n                  helpers.setStatus(\"Pomyslnie zmieniono hasło\");\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                })\r\n                .catch((error) => {\r\n                  enqueueSnackbar(\"Nie udało się zmienić hasła, spróbuj ponownie\", { \r\n                    variant: 'error',\r\n                });\r\n                  helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\r\n                  console.log(\"chngpass error\", error.response);\r\n                  const errResponse = error.response;\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                  helpers.setValues(\r\n                    {\r\n                      password: \"\",\r\n                      oldPassword: \"\",\r\n                      passwordConfirm:\"\"\r\n\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setTouched(\r\n                    {\r\n                      password: false,\r\n                      oldPassword: false,\r\n                      passwordConfirm:false\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setFieldError(\r\n                    \"oldPassword\",\r\n                    \"Podano nieprawidłowe stare hasło\"\r\n                  );\r\n\r\n                });\r\n            }, 400);\r\n          }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            <Grid container justify=\"center\">\r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n            </Grid>\r\n\r\n            \r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"password\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"passwordConfirm\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Powtórz hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"oldPassword\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Podaj stare hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n\r\n              \r\n              \r\n            \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n                disabled= {isSubmitting}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n              {\r\n                            isSubmitting &&  \r\n                           <LoadingScreenB></LoadingScreenB>\r\n                      \r\n                          } \r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n                \r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialUiManageAccount;\r\n","export default __webpack_public_path__ + \"29a2f630b088eabfaa8f98afec0658ab.png\";"],"sourceRoot":""}