{"version":3,"sources":["webpack:///./djsr/frontend/src/components/MaterialUiManageAccount.js","webpack:///./djsr/frontend/src/components/img/genesprDark.png"],"names":["useStyles","makeStyles","styles","MaterialUiManageAccount","props","FRS","user","appState","React","useState","editView","setEditView","bgStyles","paperContainer","backgroundImage","image","minHeight","examCardContainer","width","backgroundColor","cardTitle","textAlign","cardAnimaton","setCardAnimation","setTimeout","classes","rest","container","name","email","password","passwordConfirm","Yup","shape","min","max","required","oneOf","values","helpers","setSubmitting","axiosInstanceNoAuth","put","username","then","response","setState","token","data","confirmation_token","history","push","error","errResponse","setValues","setTouched","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","console","log","cardHeader","e","MaterialFormikField","fullWidth","endAdornment","inputIconsColor","cardFooter","axiosInstance","setUser","setStatus","locked","oldPassword","oldpassword","type"],"mappings":"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","file":"18.main.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Header from \"./material_ui_components/Header/Header.js\";\r\nimport HeaderLinks from \"./material_ui_components/Header/HeaderLinks.js\";\r\nimport Footer from \"./material_ui_components/Footer/Footer.js\";\r\nimport GridContainer from \"./material_ui_components/Grid/GridContainer.js\";\r\nimport GridItem from \"./material_ui_components/Grid/GridItem.js\";\r\nimport Button from \"././material_ui_components/CustomButtons/Button.js\";\r\nimport Card from \"./material_ui_components/Card/Card.js\";\r\nimport CardBody from \"./material_ui_components/Card/CardBody.js\";\r\nimport CardHeader from \"./material_ui_components/Card/CardHeader.js\";\r\nimport CardFooter from \"./material_ui_components/Card/CardFooter.js\";\r\nimport CustomInput from \"./material_ui_components/CustomInput/CustomInput.js\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from \"./assets/jss/material-kit-react/views/loginPage.js\";\r\n\r\nimport image from \"./img/genesprDark.png\";\r\nimport * as Yup from \"yup\";\r\nimport axiosInstance, { axiosInstanceNoAuth } from \"./axiosAPI\";\r\nimport { Formik, Field } from \"formik\";\r\nimport MaterialFormikField from \"./MaterialFormikField\";\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MaterialUiManageAccount = (props) => {\r\n  const FRS = \"Pole wymagane\";\r\n  const user = props.appState.user;\r\n  const [editView, setEditView] = React.useState(\"email\");\r\n  \r\nconst bgStyles = {\r\n  paperContainer: {\r\n      backgroundImage: `url(${image})`,\r\n      \r\n      minHeight: 1000,\r\n\r\n     \r\n     \r\n\r\n\r\n     \r\n  },\r\n  examCardContainer: {\r\n    width: 700,\r\n    backgroundColor: '#FEFEFA',\r\n\r\n    \r\n},\r\n\r\n  cardTitle: {\r\n    textAlign:'center'\r\n  }\r\n\r\n};\r\n\r\n\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  setTimeout(function () {\r\n    setCardAnimation(\"\");\r\n  }, 700);\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  return (\r\n    <div>\r\n      <Paper\r\n       style={bgStyles.paperContainer}\r\n      >\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card className={classes[cardAnimaton]}>\r\n              {editView==\"email\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string()\r\n            .min(2, \"Too Short!\")\r\n            .max(50, \"Too Long!\")\r\n            .required(FRS),\r\n          password: Yup.string()\r\n            .min(8, \"Too Short!\")\r\n            .max(50, \"Too Long!\")\r\n            .required(FRS),\r\n          passwordConfirm: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\r\n            .required(FRS),\r\n          email: Yup.string()\r\n            .email(\"Nieprawidłowy adres e-mail\")\r\n            .required(FRS),\r\n        })}\r\n        onSubmit={(values, helpers) => {\r\n          setTimeout(() => {\r\n            helpers.setSubmitting(true);\r\n            axiosInstanceNoAuth\r\n            .put(\"/user/update/\", {\r\n                username: values.name,\r\n                password: values.password,\r\n                email: values.email,\r\n              })\r\n              .then((response) => {\r\n                helpers.setSubmitting(false);\r\n                this.setState({\r\n                  token: response.data.confirmation_token,\r\n                });\r\n                this.props.history.push(\r\n                  `/signupsuccess/${response.data.confirmation_token}`\r\n                );\r\n              })\r\n              .catch((error) => {\r\n                // console.log(\"login error\", error.response);\r\n                const errResponse = error.response;\r\n                helpers.setSubmitting(false);\r\n                helpers.setValues(\r\n                  {\r\n                    name: \"\",\r\n                    password: \"\",\r\n                    passwordConfirm: \"\",\r\n                    email: \"\",\r\n                  },\r\n                  false\r\n                );\r\n                helpers.setTouched(\r\n                  {\r\n                    name: false,\r\n                    password: false,\r\n                    email: false,\r\n                    passwordConfirm: false,\r\n                  },\r\n                  false\r\n                );\r\n                helpers.setFieldError(\r\n                  \"general\",\r\n                  \"Nierpawidłowa nazwa użytkownika lub hasło\"\r\n                );\r\n              });\r\n          }, 5000);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            <Grid container justify=\"center\">\r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n            </Grid>\r\n\r\n\r\n\r\n                <Field\r\n                component={MaterialFormikField}\r\n                name={\"email\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"E-mail\"\r\n                inputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <People className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n         \r\n            \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n         {editView==\"name\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string()\r\n            .min(2, \"Too Short!\")\r\n            .max(50, \"Too Long!\")\r\n            .required(FRS),\r\n        })}\r\n        onSubmit={(values, helpers) => {\r\n            setTimeout(() => {\r\n              \r\n              helpers.setSubmitting(true);\r\n              axiosInstance\r\n                .put(\"/user/update/\", {\r\n                  username: values.name,\r\n                })\r\n                .then((response) => {\r\n                  this.props.setUser(response.data);\r\n                  helpers.setStatus(\"Pomyslnie zmieniono dane\");\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                })\r\n                .catch((error) => {\r\n                  // console.log(\"login error\", error.response);\r\n                  const errResponse = error.response;\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                  helpers.setValues(\r\n                    {\r\n                      name: \"\",\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setTouched(\r\n                    {\r\n                      name: false,\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setFieldError(\r\n                    \"name\",\r\n                    \"Nazwa jest w użyciu lub jest nieprawidłowa.\"\r\n                  );\r\n                });\r\n            }, 400);\r\n          }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            \r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n              \r\n\r\n                <Field\r\n                component={MaterialFormikField}\r\n                name={\"name\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Nazwa użytkownika\"\r\n                inputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <People className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n         \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n\r\n{editView==\"password\" ? (\r\n        \r\n        <Formik\r\n        initialValues={{\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            oldPassword: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n            password: Yup.string()\r\n              .min(8, \"Too Short!\")\r\n              .max(50, \"Too Long!\")\r\n              .required(\"Pole wymagane\")\r\n              .oneOf(\r\n                [Yup.ref(\"passwordConfirm\")],\r\n                \"Hasła są różne\"\r\n              ),\r\n            oldPassword: Yup.string()\r\n              .min(8, \"Too Short!\")\r\n              .max(50, \"Too Long!\")\r\n              .required(\"Pole wymagane\"),\r\n            passwordConfirm: Yup.string()\r\n              .oneOf([Yup.ref(\"password\")], \"Hasła są różne\")\r\n              .required(\"Pole wymagane\"),\r\n          })}\r\n          onSubmit={(values, helpers) => {\r\n            setTimeout(() => {\r\n              helpers.setSubmitting(true);\r\n              axiosInstance\r\n                .put(\"/user/update/\", {\r\n                  password: values.password,\r\n                  oldpassword: values.oldPassword,\r\n                })\r\n                .then((response) => {\r\n                  this.props.setUser(response.data);\r\n                  helpers.setStatus(\"Pomyslnie zmieniono hasło\");\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                })\r\n                .catch((error) => {\r\n                  helpers.setStatus(\"Podano nieprawidłowe aktualne hasło\")\r\n                  console.log(\"chngpass error\", error.response);\r\n                  const errResponse = error.response;\r\n                  helpers.setSubmitting(false);\r\n                  this.setState({ locked: false });\r\n                  helpers.setValues(\r\n                    {\r\n                      password: \"\",\r\n                      oldPassword: \"\",\r\n                      passwordConfirm:\"\"\r\n\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setTouched(\r\n                    {\r\n                      password: false,\r\n                      oldPassword: false,\r\n                      passwordConfirm:false\r\n                    },\r\n                    false\r\n                  );\r\n                  helpers.setFieldError(\r\n                    \"oldPassword\",\r\n                    \"Podano nieprawidłowe stare hasło\"\r\n                  );\r\n\r\n                });\r\n            }, 400);\r\n          }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className={classes.form}>\r\n            {console.log(touched, errors)}\r\n            <CardHeader\r\n              color=\"primary\"\r\n              className={classes.cardHeader}\r\n            >\r\n              <h4>Edytuj dane</h4>\r\n              \r\n            </CardHeader>\r\n            <CardBody>\r\n            <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"email\")}  >\r\n                   Zmień e-mail\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"name\")}  >\r\n                   Zmień nazwę użytkownika\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={(e)=>setEditView(\"password\")}  >\r\n                   Zmień hasło\r\n              </Button>\r\n            </ButtonGroup>\r\n\r\n            \r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"password\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"passwordConfirm\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Powtórz hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n            <Field\r\n                component={MaterialFormikField}\r\n                name={\"oldPassword\"}\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                labelText=\"Podaj stare hasło\"\r\n                inputProps={{\r\n                  type: \"password\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <LockIcon className={classes.inputIconsColor} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n\r\n\r\n              \r\n              \r\n            \r\n            </CardBody>\r\n            <CardFooter className={classes.cardFooter}>\r\n              <Button\r\n                simple\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                Zmień dane\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n \r\n        ) : (\r\n          <>\r\n          </>\r\n        )}\r\n                \r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialUiManageAccount;\r\n","export default __webpack_public_path__ + \"29a2f630b088eabfaa8f98afec0658ab.png\";"],"sourceRoot":""}